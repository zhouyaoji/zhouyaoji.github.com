{
    "project": {
        "name": "Mojito API",
        "description": "This is the API documentation for the Yahoo! Mojito Presentation Framework.",
        "url": "http://developer.yahoo.com/cocktails/mojito/",
        "logo": "assets/img/mojito-logo-white-bkg.png",
        "linkNatives": "true",
        "attributesEmit": "true",
        "version": "0.3.29"
    },
    "files": {
        "mojito_src/source/lib/app/addons/ac/analytics.common.js": {
            "name": "mojito_src/source/lib/app/addons/ac/analytics.common.js",
            "modules": {
                "ActionContextAddon": 1
            },
            "classes": {
                "Analytics.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/assets.common.js": {
            "name": "mojito_src/source/lib/app/addons/ac/assets.common.js",
            "modules": {},
            "classes": {
                "Assets.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/carrier.server.js": {
            "name": "mojito_src/source/lib/app/addons/ac/carrier.server.js",
            "modules": {},
            "classes": {
                "Carrier.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/composite.common.js": {
            "name": "mojito_src/source/lib/app/addons/ac/composite.common.js",
            "modules": {},
            "classes": {
                "Composite.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/config.common.js": {
            "name": "mojito_src/source/lib/app/addons/ac/config.common.js",
            "modules": {},
            "classes": {
                "Config.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/cookie.client.js": {
            "name": "mojito_src/source/lib/app/addons/ac/cookie.client.js",
            "modules": {},
            "classes": {
                "Cookie.client": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/cookie.server.js": {
            "name": "mojito_src/source/lib/app/addons/ac/cookie.server.js",
            "modules": {},
            "classes": {
                "Cookie.server": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/deploy.server.js": {
            "name": "mojito_src/source/lib/app/addons/ac/deploy.server.js",
            "modules": {},
            "classes": {
                "Deploy.server": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/device.server.js": {
            "name": "mojito_src/source/lib/app/addons/ac/device.server.js",
            "modules": {},
            "classes": {
                "Device.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/http.server.js": {
            "name": "mojito_src/source/lib/app/addons/ac/http.server.js",
            "modules": {},
            "classes": {
                "Http.server": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/i13n.common.js": {
            "name": "mojito_src/source/lib/app/addons/ac/i13n.common.js",
            "modules": {},
            "classes": {
                "I13n.server": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/intl.common.js": {
            "name": "mojito_src/source/lib/app/addons/ac/intl.common.js",
            "modules": {},
            "classes": {
                "Intl.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/meta.common.js": {
            "name": "mojito_src/source/lib/app/addons/ac/meta.common.js",
            "modules": {},
            "classes": {
                "Meta.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/output-adapter.common.js": {
            "name": "mojito_src/source/lib/app/addons/ac/output-adapter.common.js",
            "modules": {},
            "classes": {
                "OutputAdapter.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/params.common.js": {
            "name": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "modules": {},
            "classes": {
                "Params.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/partial.common.js": {
            "name": "mojito_src/source/lib/app/addons/ac/partial.common.js",
            "modules": {},
            "classes": {
                "Partial.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/addons/ac/url.common.js": {
            "name": "mojito_src/source/lib/app/addons/ac/url.common.js",
            "modules": {},
            "classes": {
                "Url.common": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/autoload/transport/beanregistry/registry.client-optional.js": {
            "name": "mojito_src/source/lib/app/autoload/transport/beanregistry/registry.client-optional.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/autoload/transport/io_facade.client-optional.js": {
            "name": "mojito_src/source/lib/app/autoload/transport/io_facade.client-optional.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/autoload/transport/request_formatter.client-optional.js": {
            "name": "mojito_src/source/lib/app/autoload/transport/request_formatter.client-optional.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/autoload/transport/request_handler.client-optional.js": {
            "name": "mojito_src/source/lib/app/autoload/transport/request_handler.client-optional.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/autoload/transport/requestor.client-optional.js": {
            "name": "mojito_src/source/lib/app/autoload/transport/requestor.client-optional.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/autoload/transport/response_processor.client-optional.js": {
            "name": "mojito_src/source/lib/app/autoload/transport/response_processor.client-optional.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/autoload/transport/transport.client-optional.js": {
            "name": "mojito_src/source/lib/app/autoload/transport/transport.client-optional.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/autoload/action-context.common.js": {
            "name": "mojito_src/source/lib/app/autoload/action-context.common.js",
            "modules": {
                "ActionContext": 1
            },
            "classes": {
                "ActionContext": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/autoload/dispatch.common.js": {
            "name": "mojito_src/source/lib/app/autoload/dispatch.common.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/autoload/mojit-proxy.client.js": {
            "name": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "modules": {
                "MojitoClient": 1
            },
            "classes": {
                "MojitProxy": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/autoload/mojito-client.client.js": {
            "name": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "modules": {},
            "classes": {
                "Y.mojito.Client": 1
            },
            "fors": {},
            "namespaces": {
                "Y.mojito": 1
            }
        },
        "mojito_src/source/lib/app/autoload/resource-store-adapter.common.js": {
            "name": "mojito_src/source/lib/app/autoload/resource-store-adapter.common.js",
            "modules": {},
            "classes": {
                "MojitoDispatcher": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/autoload/rest.common.js": {
            "name": "mojito_src/source/lib/app/autoload/rest.common.js",
            "modules": {
                "CommonLibs": 1
            },
            "classes": {
                "Y.mojito.lib.REST": 1
            },
            "fors": {},
            "namespaces": {
                "Y.mojito.lib": 1
            }
        },
        "mojito_src/source/lib/app/autoload/route-maker.common.js": {
            "name": "mojito_src/source/lib/app/autoload/route-maker.common.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/autoload/util.common.js": {
            "name": "mojito_src/source/lib/app/autoload/util.common.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/libs/Mulib/mu/parser.js": {
            "name": "mojito_src/source/lib/app/libs/Mulib/mu/parser.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/libs/Mulib/mu/preprocessor.js": {
            "name": "mojito_src/source/lib/app/libs/Mulib/mu/preprocessor.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/libs/Mulib/Mu.js": {
            "name": "mojito_src/source/lib/app/libs/Mulib/Mu.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/middleware/mojito-contextualizer.js": {
            "name": "mojito_src/source/lib/app/middleware/mojito-contextualizer.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/middleware/mojito-handler-static.js": {
            "name": "mojito_src/source/lib/app/middleware/mojito-handler-static.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/middleware/mojito-handler-tunnel.js": {
            "name": "mojito_src/source/lib/app/middleware/mojito-handler-tunnel.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/middleware/mojito-parser-body.js": {
            "name": "mojito_src/source/lib/app/middleware/mojito-parser-body.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/middleware/mojito-parser-cookies.js": {
            "name": "mojito_src/source/lib/app/middleware/mojito-parser-cookies.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/middleware/mojito-router.js": {
            "name": "mojito_src/source/lib/app/middleware/mojito-router.js",
            "modules": {},
            "classes": {
                "Y.mojito.lib.MojitoRouter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/app/mojits/DaliProxy/autoload/store-provider.server.js": {
            "name": "mojito_src/source/lib/app/mojits/DaliProxy/autoload/store-provider.server.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/index.js": {
            "name": "mojito_src/source/lib/index.js",
            "modules": {
                "MojitoServer": 1
            },
            "classes": {
                "MojitoServer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/output-handler.server.js": {
            "name": "mojito_src/source/lib/output-handler.server.js",
            "modules": {},
            "classes": {
                "OutputHandler": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/server-log.js": {
            "name": "mojito_src/source/lib/server-log.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "mojito_src/source/lib/store.server.js": {
            "name": "mojito_src/source/lib/store.server.js",
            "modules": {},
            "classes": {
                "ResourceStore.server": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "ActionContextAddon": {
            "name": "ActionContextAddon",
            "submodules": {},
            "classes": {
                "Analytics.common": 1,
                "Assets.common": 1,
                "Carrier.common": 1,
                "Composite.common": 1,
                "Config.common": 1,
                "Cookie.client": 1,
                "Cookie.server": 1,
                "Deploy.server": 1,
                "Device.common": 1,
                "Http.server": 1,
                "I13n.server": 1,
                "Intl.common": 1,
                "Meta.common": 1,
                "OutputAdapter.common": 1,
                "Params.common": 1,
                "Partial.common": 1,
                "Url.common": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "mojito_src/source/lib/app/addons/ac/url.common.js",
            "line": 35,
            "description": "The <strong>Action Context</strong> uses a mechanism called\n<strong><em>Addons</em></strong> to provide functionality that lives both on\nthe server and/or client. Each Addon provides additional functions through a\nnamespace that is attached directly to the ac argument available in every\ncontroller function."
        },
        "ActionContext": {
            "name": "ActionContext",
            "submodules": {},
            "classes": {
                "ActionContext": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "mojito_src/source/lib/app/autoload/action-context.common.js",
            "line": 226,
            "description": "The Action Context is a key part of the Mojito framework. The <em>ac</em>,\nfor short, gives you access to the frameworks features from within a\ncontroller function. The ac is an abstraction that allows you to execute\nmojit actions within either a server or client context."
        },
        "MojitoClient": {
            "name": "MojitoClient",
            "submodules": {},
            "classes": {
                "MojitoDispatcher": 1,
                "MojitProxy": 1,
                "Y.mojito.Client": 1
            },
            "fors": {},
            "namespaces": {
                "Y.mojito": 1
            },
            "tag": "module",
            "file": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "line": 227,
            "description": "Client side Mojito runtime",
            "is_constructor": 1,
            "params": [
                {
                    "name": "config",
                    "description": "The entire configuration object written by the\n    server to start up mojito.",
                    "type": "Object"
                }
            ]
        },
        "CommonLibs": {
            "name": "CommonLibs",
            "submodules": {},
            "classes": {
                "Y.mojito.lib.REST": 1,
                "Y.mojito.lib.MojitoRouter": 1
            },
            "fors": {},
            "namespaces": {
                "Y.mojito.lib": 1
            },
            "tag": "module",
            "file": "mojito_src/source/lib/app/middleware/mojito-router.js",
            "line": 33,
            "description": "Common Library"
        },
        "MojitoServer": {
            "name": "MojitoServer",
            "submodules": {},
            "classes": {
                "MojitoServer": 1,
                "OutputHandler": 1,
                "ResourceStore.server": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "mojito_src/source/lib/store.server.js",
            "line": 83,
            "description": "The Mojito Server bootstrap",
            "is_constructor": 1,
            "params": [
                {
                    "name": "root",
                    "description": "directory where application is found",
                    "type": "String"
                },
                {
                    "name": "libs",
                    "description": "dependent libraries -- this param is mainly used\n                     during unit testing",
                    "type": "Object"
                }
            ]
        }
    },
    "classes": {
        "Analytics.common": {
            "name": "Analytics.common",
            "shortname": "Analytics.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/analytics.common.js",
            "line": 29,
            "description": "<strong>Access point:</strong> <em>ac.analytics.*</em>\nProvides an easy way to stash analytics information within child mojits\nand retrieve them within parent after the children have been executed.\nData handled by this addon, however, cannot be used to augment the\nnormal data flow. IE: you cannot retrieve analytics data and then call\nac.done()."
        },
        "Assets.common": {
            "name": "Assets.common",
            "shortname": "Assets.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/assets.common.js",
            "line": 26,
            "description": "<strong>Access point:</strong> <em>ac.assets.*</em>\nProvides methods for adding HTML assets to a page."
        },
        "Carrier.common": {
            "name": "Carrier.common",
            "shortname": "Carrier.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/carrier.server.js",
            "line": 17,
            "description": "<strong>Access point:</strong> <em>ac.carrier.get()</em>\nCarrier catalog addon"
        },
        "Composite.common": {
            "name": "Composite.common",
            "shortname": "Composite.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/composite.common.js",
            "line": 61,
            "description": "<strong>Access point:</strong> <em>ac.composite.*</em>\nProvides methods for working with many Mojits."
        },
        "Config.common": {
            "name": "Config.common",
            "shortname": "Config.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/config.common.js",
            "line": 38,
            "description": "<strong>Access point:</strong> <em>ac.config.*</em>\nProvides access to the Mojits configuration"
        },
        "Cookie.client": {
            "name": "Cookie.client",
            "shortname": "Cookie.client",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/cookie.client.js",
            "line": 17,
            "description": "<strong>Access point:</strong> <em>ac.cookie.*</em>\nThis client-side cookie add-on allows you to easily use cookies. This API\nmatches the YUI Cookie API exactly.\nhttp://developer.yahoo.com/yui/3/api/Cookie.html"
        },
        "Cookie.server": {
            "name": "Cookie.server",
            "shortname": "Cookie.server",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/cookie.server.js",
            "line": 17,
            "description": "<strong>Access point:</strong> <em>ac.cookie.*</em>\nThis server-side cookie add-on allows you to easily use cookies."
        },
        "Deploy.server": {
            "name": "Deploy.server",
            "shortname": "Deploy.server",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/deploy.server.js",
            "line": 39,
            "description": "<strong>Access point:</strong> <em>ac.deploy.*</em>\nProvides ability to create client runtime deployment HTML"
        },
        "Device.common": {
            "name": "Device.common",
            "shortname": "Device.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/device.server.js",
            "line": 17,
            "description": "<strong>Access point:</strong> <em>ac.device.get()</em>\nDevice catalog addon"
        },
        "Http.server": {
            "name": "Http.server",
            "shortname": "Http.server",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/http.server.js",
            "line": 21,
            "description": "<strong>Access point:</strong> <em>ac.http.*</em>\nThis is a server-only utility plugin that makes many server side\nresources available for mojit code that will never run on the client."
        },
        "I13n.server": {
            "name": "I13n.server",
            "shortname": "I13n.server",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/i13n.common.js",
            "line": 65,
            "description": "<strong>Access point:</strong> <em>ac.i13n.*</em>\nInstrumentation addon for link tracking and page views."
        },
        "Intl.common": {
            "name": "Intl.common",
            "shortname": "Intl.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/intl.common.js",
            "line": 17,
            "description": "<strong>Access point:</strong> <em>ac.intl.*</em>\nInternationalization addon"
        },
        "Meta.common": {
            "name": "Meta.common",
            "shortname": "Meta.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/meta.common.js",
            "line": 20,
            "description": "<strong>Access point:</strong> <em>ac.meta.*</em>\nAllows the usage of the \"meta\" object as a storage device, which can pass\ndata from child mojits up towards parents."
        },
        "OutputAdapter.common": {
            "name": "OutputAdapter.common",
            "shortname": "OutputAdapter.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/output-adapter.common.js",
            "line": 329,
            "description": "<strong>Access point:</strong> <em>ac.*</em>\nThe main API point for developers in a Controller. This addon provides\nthe core functions\nof the ActionContext: <em>flush</em>, <em>done</em>, and <em>error</em>.",
            "access": "private",
            "tagname": ""
        },
        "Params.common": {
            "name": "Params.common",
            "shortname": "Params.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "line": 18,
            "description": "<strong>Access point:</strong> <em>ac.params.*</em>\nAddon that provides access to any parameters given to the system"
        },
        "Partial.common": {
            "name": "Partial.common",
            "shortname": "Partial.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/partial.common.js",
            "line": 17,
            "description": "<strong>Access point:</strong> <em>ac.partial.*</em>\nProvides methods for working with \"actions\" and \"views\" on the current\nMojits."
        },
        "Url.common": {
            "name": "Url.common",
            "shortname": "Url.common",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContextAddon",
            "namespace": "",
            "file": "mojito_src/source/lib/app/addons/ac/url.common.js",
            "line": 35,
            "description": "<strong>Access point:</strong> <em>ac.url.*</em>\nGenerates URL's based on the applictions routing configuration"
        },
        "ActionContext": {
            "name": "ActionContext",
            "shortname": "ActionContext",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ActionContext",
            "namespace": "",
            "file": "mojito_src/source/lib/app/autoload/action-context.common.js",
            "line": 226,
            "description": "The main point of entry for all mojits into Mojito. The Action Context is\npassed to every mojit action during execution, either on the client or\nserver. This object is the API into Mojito, can can have many plugins\nattached the provide extra functionality."
        },
        "MojitoDispatcher": {
            "name": "MojitoDispatcher",
            "shortname": "MojitoDispatcher",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MojitoClient",
            "namespace": "",
            "file": "mojito_src/source/lib/app/autoload/resource-store-adapter.common.js",
            "line": 12,
            "description": "This object is responsible for running mojits.",
            "is_constructor": 1,
            "params": [
                {
                    "name": "resourceStore",
                    "description": "the store to use.",
                    "type": "ServerStore"
                }
            ],
            "access": "private",
            "tagname": ""
        },
        "MojitProxy": {
            "name": "MojitProxy",
            "shortname": "MojitProxy",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MojitoClient",
            "namespace": "",
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 33,
            "description": "The object that is given to each mojit binder to be used to interact with\nother mojits and the mojito framework."
        },
        "Y.mojito.Client": {
            "name": "Y.mojito.Client",
            "shortname": "Y.mojito.Client",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MojitoClient",
            "namespace": "Y.mojito",
            "file": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "line": 227,
            "description": "The starting point for mojito to run in the browser. You can access one\ninstance of the Mojito Client running within the browser environment\nthrough window.YMojito.client."
        },
        "Y.mojito.lib.REST": {
            "name": "Y.mojito.lib.REST",
            "shortname": "Y.mojito.lib.REST",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib",
            "file": "mojito_src/source/lib/app/autoload/rest.common.js",
            "line": 47,
            "description": "The Rest module for Mojito provides an easy way to make RESTful calls to\nURLs without messing about with Y.io."
        },
        "Y.mojito.lib.MojitoRouter": {
            "name": "Y.mojito.lib.MojitoRouter",
            "shortname": "MojitoRouter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib",
            "file": "mojito_src/source/lib/app/middleware/mojito-router.js",
            "line": 33,
            "description": "The Routing component of Mojito.",
            "params": [
                {
                    "name": "store",
                    "description": "The resource store for the router to use.",
                    "type": "Object"
                }
            ],
            "is_constructor": 1,
            "access": "private",
            "tagname": ""
        },
        "MojitoServer": {
            "name": "MojitoServer",
            "shortname": "MojitoServer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MojitoServer",
            "namespace": "",
            "file": "mojito_src/source/lib/index.js",
            "line": 10,
            "description": "The Mojito Server bootstrap"
        },
        "OutputHandler": {
            "name": "OutputHandler",
            "shortname": "OutputHandler",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MojitoServer",
            "namespace": "",
            "file": "mojito_src/source/lib/output-handler.server.js",
            "line": 11,
            "description": "This is an object used as the single pathway for data to leave a mojit\naction execution. It is used as a component of the ActionContext object,\nwhich uses it to call <em>done</em> and <em>flush</em> in order to complete.\n\nThere are two versions of this object, one for the client, and one for the\nserver. This is the server version, which is more complex than the client\nversion.",
            "params": [
                {
                    "name": "req",
                    "description": "The Request object.",
                    "type": "Object"
                },
                {
                    "name": "res",
                    "description": "The Response object.",
                    "type": "Object"
                },
                {
                    "name": "next",
                    "description": "The next function, which should be invokable.",
                    "type": "Function"
                }
            ],
            "is_constructor": 1
        },
        "ResourceStore.server": {
            "name": "ResourceStore.server",
            "shortname": "ResourceStore.server",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "MojitoServer",
            "namespace": "",
            "file": "mojito_src/source/lib/store.server.js",
            "line": 83,
            "description": "The Resource Store manages information about the \"resources\" in a Mojito\napplication.  These resources are things that have representation on the\nfilesystem.\n\nEach resource can have many different versions.  This is not talking about\nrevisions, which is how the resource changes over time.  It is instead\ntalking about how there can be a version of the resource just for iphones,\none just for android, a fallback, etc.\n\nThere are various types of resources:\n<pre>\n  config      -- a piece of configuration, sometimes for another resource\n  controller  -- the controller for a mojit\n  model       -- a model for a mojit\n  view        -- a view for a mojit\n  binder      -- a binder for a mojit\n  action      -- an action to augment the controller\n  asset       -- an asset (css, js, image, etc)\n  addon       -- an addon to the mojito system\n  spec        -- the configuration for a mojit instance\n  yui-lang    -- a YUI3 language bundle\n  yui-module  -- a YUI3 module (that isn't one of the above)\n</pre>\n\nThe metadata kept about each resource is \"normalized\" to the follow keys:\n  (not all resources will have all keys)\n  (some types will have additional keys)\n\n<pre>\n  - id\n      context-insensitive ID of the resource\n      said another way, all versions of a resource have the same ID\n\n  - type\n      see above\n\n  - fsPath\n      the path on the filesystem\n\n  - staticHandlerURL\n      the URL that will cause the asset handler to serve the resource\n      for resources that can be deployed by reference to the client\n\n  - name\n      specific to type\n\n  - configType\n      for type=config\n      the type of the configuration\n\n  - viewEngine\n      for type=view\n      `mu`, `dust`, etc\n\n  - viewOutputFormat\n      for type=view\n      output format that the view will generate\n      `xml`, `html`, etc\n\n  - assetType\n      for type=asset\n      `css`, `js`, `png`, `swf`, etc\n\n  - addonType\n      for type=addon\n      the mojito subsystem to which the addon should be added\n\n  - yuiModuleName\n      for any resource delivered as a YUI3 module\n      the YUI3 module name\n\n  - yuiModuleVersion\n      for any resource delivered as a YUI3 module\n      the YUI3 module version\n\n  - yuiModuleMeta\n      for any resource delivered as a YUI3 module\n      the YUI3 module metadata\n      (requires, langs, etc)\n\n  - yuiSortedPaths\n      for any resource delivered as a YUI3 module\n      a list of YUI modules required by the module,\n      with transitive dependencies resolved\n      format:  { yui-module-name: URL-to-load-yui-module }\n</pre>"
        }
    },
    "classitems": [
        {
            "file": "mojito_src/source/lib/app/addons/ac/analytics.common.js",
            "line": 51,
            "description": "Allows a way for addons mixed in after this one to set an alternate\ndata merge function when analytics from multiple children are\ncombined. The default merge function is the same one used internally\nby Mojito to merge meta data, and will be sufficient for most use\ncases.",
            "itemtype": "method",
            "name": "setmergeFunction",
            "params": [
                {
                    "name": "fn",
                    "description": "user-defined merge function, which should accept\ntwo objects, the first is \"to\", and the second is \"from\". this\nfunction should return the merged object.",
                    "type": "Function"
                }
            ],
            "class": "Analytics.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/analytics.common.js",
            "line": 67,
            "description": "Store an analytic value. This function can be called multiple times\nwithin a mojit, and uses a merging function to combine objects.",
            "itemtype": "method",
            "name": "store",
            "params": [
                {
                    "name": "val",
                    "description": "An object bag full of whatever you wish.",
                    "type": "Object"
                }
            ],
            "class": "Analytics.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/analytics.common.js",
            "line": 82,
            "description": "To retrieve analytics data that has been stored by child mojits, call\nthis function and provide a function, which will be called once the\nchildren have been dispatched and all their analytics data has been\nmerged.",
            "itemtype": "method",
            "name": "retrieve",
            "params": [
                {
                    "name": "cb",
                    "description": "callback invoked with the analytics object.",
                    "type": "Function"
                },
                {
                    "name": "optional",
                    "description": "scope scope of the callback.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Analytics.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/assets.common.js",
            "line": 50,
            "description": "Method for adding a CSS file to the page.",
            "itemtype": "method",
            "name": "addCss",
            "params": [
                {
                    "name": "link",
                    "description": "A URL (./local.css converts to\n    /static/mojit_type/assets/local.css).",
                    "type": "String"
                },
                {
                    "name": "location",
                    "description": "Either \"top\" or \"bottom\".",
                    "type": "String"
                }
            ],
            "class": "Assets.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/assets.common.js",
            "line": 62,
            "description": "Method for adding a JS file to the page.",
            "itemtype": "method",
            "name": "addJs",
            "params": [
                {
                    "name": "link",
                    "description": "A URL (./local.css converts to\n    /static/mojit_type/assets/local.css).",
                    "type": "String"
                },
                {
                    "name": "location",
                    "description": "Either \"top\" or \"bottom\".",
                    "type": "String"
                }
            ],
            "class": "Assets.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/assets.common.js",
            "line": 74,
            "description": "Method for adding a Blob of data to the page. This can be used\nfor adding custom \"script\" or \"style\" blocks.",
            "itemtype": "method",
            "name": "addBlob",
            "params": [
                {
                    "name": "content",
                    "description": "A string of data.",
                    "type": "String"
                },
                {
                    "name": "location",
                    "description": "Either \"top\" or \"bottom\".",
                    "type": "String"
                }
            ],
            "class": "Assets.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/assets.common.js",
            "line": 86,
            "class": "Assets.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/assets.common.js",
            "line": 151,
            "itemtype": "method",
            "name": "addAssets",
            "class": "Assets.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/assets.common.js",
            "line": 177,
            "itemtype": "method",
            "name": "preLoadImage",
            "class": "Assets.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/assets.common.js",
            "line": 190,
            "itemtype": "method",
            "name": "preLoadImages",
            "class": "Assets.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/assets.common.js",
            "line": 204,
            "itemtype": "method",
            "name": "getUrl",
            "class": "Assets.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/assets.common.js",
            "line": 212,
            "itemtype": "method",
            "name": "mixAssets",
            "class": "Assets.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/assets.common.js",
            "line": 220,
            "getassets": "",
            "class": "Assets.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/assets.common.js",
            "line": 229,
            "mergemetainto": "",
            "access": "private",
            "tagname": "",
            "class": "Assets.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/carrier.server.js",
            "line": 55,
            "description": "Returns the attribute of the catalog for the current carrier used for\nthis request.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "attribute",
                    "description": "The name of the catalog attribute e.g\n    \"ticker\".",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The catalog attribute value.",
                "type": "Object"
            },
            "class": "Carrier.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/composite.common.js",
            "line": 78,
            "description": "Automatically dispatches all the children of this mojit and collects\ntheir executed values into the view template, keyed by the child's\nname within the mojit's configuration. For example, given the mojit\nspec:\n\n\n<pre>\n\"specs\": {\n   \"parent\": {\n       \"type\": \"MyCompositeMojit\",\n        \"config\": {\n            \"children\": {\n                \"foo\": {\n                    \"type\": \"FooMojit\"\n                },\n                \"bar\": {\n                    \"type\": \"BarMojit\"\n                }\n            }\n        }\n   }\n       }\n</pre>\nAnd given the view template:\n<pre>\n&lt;div id=&quot;{{mojit_view_id}}&quot;&gt;\n&lt;h1&gt;{{title}}&lt;/h1&gt;\n&lt;div class=&quot;fooslot&quot;&gt;\n   {{{foo}}}\n&lt;/div&gt;\n&lt;div class=&quot;barslot&quot;&gt;\n   {{{bar}}}\n&lt;/div&gt;\n&lt;/div&gt;\n</pre>\nAnd the controller:\n<pre>\nY.mojito.controller = {\n   index: function(ac) {\n       ac.composite.done({\n           template: { title: 'Hello there' } // for the view only\n       });\n   }\n       };\n</pre>\nThis will execute the child intances of the \"FooMojit\" and\n\"BarMojit\", returning their rendered values into the parent's view\ntemplate, thus rendering the full parent view including the children.\nAll the parent parameters are passed along to children.",
            "itemtype": "method",
            "name": "done",
            "params": [
                {
                    "name": "opts",
                    "description": "The configuration object to be used.\n    <em>template<em> can be used to provide additional\nview template values.",
                    "type": "Object"
                }
            ],
            "class": "Composite.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/composite.common.js",
            "line": 157,
            "description": "This method requires an explicit config object and returns\na RMP compliant object via a callback.\n\n<pre>\ncfg = {\n   children: {\n       slot-1: {\n           type: \"default\",\n           action: \"index\"\n       },\n       slot-2: {\n           type: \"default\",\n           action: \"index\",\n           params: {\n               route: {},\n               url: {},\n               body: {},\n               file: {}\n           }\n       }\n   },\n   assets: {}\n       }\n</pre>\n\nThe \"callback\" is an object containg the child slots with its\nrendered data.\n\n<pre>\ncallback({\n   slot-1: <string>,\n   slot-2: <string>\n       },\n       {\n  http: {}\n  assets: {}\n       })\n</pre>",
            "itemtype": "method",
            "name": "execute",
            "params": [
                {
                    "name": "cfg",
                    "description": "The configuration object to be used.",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "The callback that will be called.",
                    "type": "Function"
                }
            ],
            "class": "Composite.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/config.common.js",
            "line": 53,
            "description": "Access config values.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "key",
                    "description": "A period separated key path to look for i.e.\n    \"get.my.value\".",
                    "type": "String"
                },
                {
                    "name": "def",
                    "description": "The default value to use if no match\n    was found.",
                    "type": "Object|Array|String"
                }
            ],
            "return": {
                "description": "The requested configuration value.",
                "type": "Object|Array|String"
            },
            "class": "Config.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/config.common.js",
            "line": 67,
            "description": "Access definition values.",
            "itemtype": "method",
            "name": "getDefinition",
            "params": [
                {
                    "name": "key",
                    "description": "A period separated key path to look for i.e.\n    \"get.my.value\".",
                    "type": "String"
                },
                {
                    "name": "def",
                    "description": "The default value to use if no match\n    was found.",
                    "type": "Object|Array|String"
                }
            ],
            "return": {
                "description": "The requested definition values.",
                "type": "Object|Array|String"
            },
            "class": "Config.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/cookie.server.js",
            "line": 33,
            "description": "Returns the cookie for the given key or all the cookies if the key\nis not specified.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "optional",
                    "description": "key The key to look for.",
                    "type": "String",
                    "optional": true
                }
            ],
            "return": {
                "description": "contains all the cookies if the key is not specified.",
                "type": "Object"
            },
            "class": "Cookie.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/cookie.server.js",
            "line": 49,
            "description": "Set a cookie on the given key with the given value",
            "itemtype": "method",
            "name": "set",
            "params": [
                {
                    "name": "key",
                    "description": "The key to use.",
                    "type": "String"
                },
                {
                    "name": "val",
                    "description": "The value that will be set.",
                    "type": "String"
                }
            ],
            "class": "Cookie.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/deploy.server.js",
            "line": 55,
            "description": "Declaration of store requirement.",
            "itemtype": "method",
            "name": "setStore",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "rs",
                    "description": "The resource store instance.",
                    "type": "ResourceStore"
                }
            ],
            "class": "Deploy.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/deploy.server.js",
            "line": 69,
            "description": "Builds up the browser Mojito runtime.",
            "itemtype": "method",
            "name": "constructMojitoClientRuntime",
            "params": [
                {
                    "name": "assetHandler",
                    "description": "asset handler used to add scripts\n    to the DOM under construction.",
                    "type": "AssetHandler"
                },
                {
                    "name": "binderMap",
                    "description": "information about the binders that will be\n    deployed to the client.",
                    "type": "Object"
                }
            ],
            "class": "Deploy.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/deploy.server.js",
            "line": 337,
            "description": "TODO: [Issue 66] This can be made faster with a single for\nloop and caching.\n\nNote: A single SCRIPT tag containing all the JS on the pages is\nslower than many SCRIPT tags (checked on iPad only).",
            "itemtype": "method",
            "name": "getScripts",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "embed",
                    "description": "Should returned scripts be embedded in script\n    tags.",
                    "type": "Bool"
                }
            ],
            "return": {
                "description": "An object containing script descriptors.",
                "type": "Object"
            },
            "class": "Deploy.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/device.server.js",
            "line": 50,
            "description": "Returns the attribute of the catalog for the device\nthis request was intiated from.",
            "itemtype": "method",
            "name": "get",
            "params": [
                {
                    "name": "attribute",
                    "description": "The name of the catalog attribute e.g\n    \"make\" or \"model\".",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The value of the named attribute.",
                "type": "Object"
            },
            "class": "Device.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/http.server.js",
            "line": 38,
            "description": "Returns the HTTP request.",
            "itemtype": "method",
            "name": "getRequest",
            "return": {
                "description": "The node.js http.ServerRequest instance.",
                "type": "ServerRequest"
            },
            "class": "Http.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/http.server.js",
            "line": 48,
            "description": "Returns the HTTP response object from the request.",
            "itemtype": "method",
            "name": "getResponse",
            "return": {
                "description": "The node.js http.ServerResponse instance.",
                "type": "ServerResponse"
            },
            "class": "Http.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/http.server.js",
            "line": 58,
            "description": "Adds a header to the response without overriding previous values",
            "itemtype": "method",
            "name": "addHeader",
            "params": [
                {
                    "name": "key",
                    "description": "header name.",
                    "type": "String"
                },
                {
                    "name": "val",
                    "description": "header value.",
                    "type": "String"
                }
            ],
            "class": "Http.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/http.server.js",
            "line": 85,
            "description": "Adds a object of headers all at once, adding to previous values",
            "itemtype": "method",
            "name": "addHeaders",
            "params": [
                {
                    "name": "hdrs",
                    "description": "header values to add.",
                    "type": "Object"
                }
            ],
            "class": "Http.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/http.server.js",
            "line": 97,
            "description": "Sets a header by key, overriding previous values",
            "itemtype": "method",
            "name": "setHeader",
            "params": [
                {
                    "name": "key",
                    "description": "header name.",
                    "type": "String"
                },
                {
                    "name": "val",
                    "description": "header value.",
                    "type": "String"
                }
            ],
            "class": "Http.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/http.server.js",
            "line": 108,
            "description": "Sets a object full of headers all at once, overriding previous values",
            "itemtype": "method",
            "name": "setHeaders",
            "params": [
                {
                    "name": "hdrs",
                    "description": "header values to set.",
                    "type": "Object"
                }
            ],
            "class": "Http.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/http.server.js",
            "line": 120,
            "description": "Returns one request header value",
            "itemtype": "method",
            "name": "getHeader",
            "params": [
                {
                    "name": "name",
                    "description": "header name.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "header value.",
                "type": "Object"
            },
            "class": "Http.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/http.server.js",
            "line": 141,
            "description": "Returns all request headers",
            "itemtype": "method",
            "name": "getHeaders",
            "return": {
                "description": "all headers.",
                "type": "Object"
            },
            "class": "Http.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/http.server.js",
            "line": 151,
            "description": "Helper to tell you if this is an XHR request. Checks specifically\nfor the 'x-requested-with' header.",
            "itemtype": "method",
            "name": "isXhr",
            "return": {
                "description": "True if the receiver is associated with an XHR\n    request.",
                "type": "Boolean"
            },
            "class": "Http.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/http.server.js",
            "line": 163,
            "description": "This redirect is an external redirect. It causes an HTTP\nstatus code 301 by default.",
            "itemtype": "method",
            "name": "redirect",
            "params": [
                {
                    "name": "uri",
                    "description": "the URI to redirect to.",
                    "type": "String"
                },
                {
                    "name": "code",
                    "description": "[optional] if not specifed, 301.",
                    "type": "Number"
                }
            ],
            "class": "Http.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/i13n.common.js",
            "line": 17,
            "description": "Processes the following part of the mojit's config:\n<code>\n\"i13n\" : {\n     \"spaceid\" : 12345,\n     \"page\"    : { \"val1\" : \"param1\"}\n}\n</code>",
            "itemtype": "method",
            "name": "initFromConfig",
            "params": [
                {
                    "name": "command",
                    "description": "The comment object providing configuration data.",
                    "type": "Object"
                },
                {
                    "name": "ac",
                    "description": "The action context.",
                    "type": "ActionContext"
                },
                {
                    "name": "i13n",
                    "description": "The localization object.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "I13n.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/i13n.common.js",
            "line": 96,
            "description": "Provides facility to create an URL to other\nmojits with a link tracking instrumentation.",
            "itemtype": "method",
            "name": "make",
            "params": [
                {
                    "name": "base",
                    "description": "Reference to a mojit defined at the root\n    level of the Mojito application configuration.",
                    "type": "String"
                },
                {
                    "name": "action",
                    "description": "The action to associate with the base.",
                    "type": "String"
                },
                {
                    "name": "routeParams",
                    "description": "used to lookup the route in the routing\n    table.",
                    "type": "Object"
                },
                {
                    "name": "verb",
                    "description": "GET, POST, PUT, DELETE (case insensitive).",
                    "type": "String"
                },
                {
                    "name": "urlParams",
                    "description": "added to the looked up route as query\n    params.",
                    "type": "Object"
                },
                {
                    "name": "i13nParams",
                    "description": "parameters to be used for link tracking.",
                    "type": "Object"
                }
            ],
            "class": "I13n.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/i13n.common.js",
            "line": 121,
            "description": "Stamps the page view event.",
            "params": [
                {
                    "name": "spaceid",
                    "description": "The spaceid to be used.",
                    "type": "Number"
                }
            ],
            "class": "I13n.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/i13n.common.js",
            "line": 130,
            "description": "Tracks a pair of page parameters as (key, value) for this request.",
            "params": [
                {
                    "name": "key",
                    "description": "The page parameter name.",
                    "type": "String"
                },
                {
                    "name": "value",
                    "description": "The page parameter value.",
                    "type": "String"
                }
            ],
            "class": "I13n.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/i13n.common.js",
            "line": 140,
            "description": "Tracks the link view and generates the URL with the hash token\nappended to it.",
            "params": [
                {
                    "name": "url",
                    "description": "The link to be instrumented.",
                    "type": "String"
                },
                {
                    "name": "link_params",
                    "description": "The link parameters.",
                    "type": "Object"
                },
                {
                    "name": "local_groups",
                    "description": "- Optional.",
                    "type": "Object"
                },
                {
                    "name": "ult_args",
                    "description": "- Optional.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "url with the hash appended to it.",
                "type": "String"
            },
            "class": "I13n.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/i13n.common.js",
            "line": 154,
            "description": "Tracks the link view for the links taken from the user generated\ncontent and hence need to be signed by B-cookie to prevent the\nsecurity problems.",
            "params": [
                {
                    "name": "url",
                    "description": "The link to be instrumented.",
                    "type": "String"
                },
                {
                    "name": "link_params",
                    "description": "The link parameters.",
                    "type": "Object"
                },
                {
                    "name": "local_groups",
                    "description": "Optional.",
                    "type": "Object"
                },
                {
                    "name": "ult_args",
                    "description": "Optional.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "url with the hash appended to it.",
                "type": "String"
            },
            "class": "I13n.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/i13n.common.js",
            "line": 169,
            "description": ", ,  [, ult_args [, return_code]]",
            "params": [
                {
                    "name": "is_post_method",
                    "description": "True, if the method is POST.",
                    "type": "Boolean"
                },
                {
                    "name": "action_url",
                    "description": "The form action link to be instrumented.",
                    "type": "String"
                },
                {
                    "name": "link_params",
                    "description": "Tracking parameters.",
                    "type": "Object"
                },
                {
                    "name": "ult_args",
                    "description": "Optional.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "form action url with the hash appended to it.",
                "type": "String"
            },
            "class": "I13n.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/i13n.common.js",
            "line": 182,
            "description": "Instrument links for tracking of the link clicks by gemerating the\nURL with the hash token appended to it.",
            "params": [
                {
                    "name": "url",
                    "description": "The link to be instrumented.",
                    "type": "String"
                },
                {
                    "name": "link_params",
                    "description": "The link parameters.",
                    "type": "Object"
                },
                {
                    "name": "ult_args",
                    "description": "Optional.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "url with the hash appended to it.",
                "type": "String"
            },
            "class": "I13n.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/i13n.common.js",
            "line": 195,
            "description": "Return spaceid used for this request.",
            "return": {
                "description": "the spaceid previously set through stampPageView()\n    or configuration.",
                "type": "Object"
            },
            "class": "I13n.server",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/intl.common.js",
            "line": 31,
            "description": "Returns translated string.",
            "itemtype": "method",
            "name": "lang",
            "params": [
                {
                    "name": "label",
                    "description": "Optional. The initial label to be translated. If not provided, returns a copy of all resources.",
                    "type": "String"
                },
                {
                    "name": "args",
                    "description": "optional parameters for the string",
                    "type": "String|Array|Object"
                }
            ],
            "return": {
                "description": "translated string for label or if no label was provided an object containing all resources.",
                "type": "String|Object"
            },
            "class": "Intl.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/intl.common.js",
            "line": 50,
            "description": "Returns local-specified date.",
            "itemtype": "method",
            "name": "formatDate",
            "params": [
                {
                    "name": "date",
                    "description": "The initial date to be formatted.",
                    "type": "Date"
                }
            ],
            "return": {
                "description": "formatted data for language.",
                "type": "String"
            },
            "class": "Intl.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/meta.common.js",
            "line": 36,
            "description": "Stores a keyed value within the meta object of the current mojit\nexecution. You can call this as many times as you like, but\nif you use the same key, you'll override previous data. Call this\nwithin child mojits when you have some data you want to make\navailable for some reason to any parents up your hierarchy.",
            "itemtype": "method",
            "name": "store",
            "params": [
                {
                    "name": "key",
                    "description": "The key used as the index value.",
                    "type": "String"
                },
                {
                    "name": "val",
                    "description": "The value to store.",
                    "type": "Object"
                }
            ],
            "class": "Meta.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/meta.common.js",
            "line": 51,
            "description": "To retrieve stashed data that has been stored by child mojits, call\nthis function and provide a function, which will be called once the\nchildren have been dispatched and all their meta data has been\nmerged.",
            "itemtype": "method",
            "name": "retrieve",
            "params": [
                {
                    "name": "cb",
                    "description": "callback will be called with the stored merged\n    object.",
                    "type": "Function"
                },
                {
                    "name": "optional",
                    "description": "scope scope of the callback.",
                    "type": "Object",
                    "optional": true
                }
            ],
            "class": "Meta.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "line": 32,
            "description": "Gets all params, keyed by 'route', 'url', 'body', and 'file'.",
            "itemtype": "method",
            "name": "getAll",
            "return": {
                "description": "all params.",
                "type": "Object"
            },
            "class": "Params.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "line": 48,
            "description": "Alias for 'getAll'.",
            "itemtype": "method",
            "name": "all",
            "return": {
                "description": "all params.",
                "type": "Object"
            },
            "class": "Params.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "line": 58,
            "description": "Gets all params merged into one object. Route -> URL -> Body\nprecedence.",
            "itemtype": "method",
            "name": "getFromMerged",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the parameter required.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "param value, or all params if no key\n    specified.",
                "type": "String|object"
            },
            "class": "Params.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "line": 84,
            "description": "Alias for 'getFromMerged'.",
            "itemtype": "method",
            "name": "merged",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the parameter required.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "param value, or all params if no key\n    specified.",
                "type": "String|object"
            },
            "class": "Params.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "line": 96,
            "description": "Gets route parameters",
            "itemtype": "method",
            "name": "getFromRoute",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the parameter.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "param value, or all params if no key\n    specified.",
                "type": "String|object"
            },
            "class": "Params.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "line": 117,
            "description": "Alias for 'getFromRoute'.",
            "itemtype": "method",
            "name": "route",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the parameter required.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "param value, or all params if no key\n    specified.",
                "type": "String|object"
            },
            "class": "Params.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "line": 129,
            "description": "Gets URL parameters",
            "itemtype": "method",
            "name": "getFromUrl",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the parameter required.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "param value, or all params if no key\n    specified.",
                "type": "String|object"
            },
            "class": "Params.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "line": 150,
            "description": "Alias for 'getFromUrl'.",
            "itemtype": "method",
            "name": "url",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the parameter required.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "param value, or all params if no key\n    specified.",
                "type": "String|object"
            },
            "class": "Params.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "line": 162,
            "description": "Gets body parameters",
            "itemtype": "method",
            "name": "getFromBody",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the parameter required.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "param value, or all params if no key\n    specified.",
                "type": "String|object"
            },
            "class": "Params.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "line": 183,
            "description": "Alias for 'getFromBody'.",
            "itemtype": "method",
            "name": "body",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the parameter required.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "param value, or all params if no key\n    specified.",
                "type": "String|object"
            },
            "class": "Params.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "line": 195,
            "description": "Gets file parameters",
            "itemtype": "method",
            "name": "getFromFiles",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the parameter required.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "param value, or all params if no key\n    specified.",
                "type": "String|object"
            },
            "class": "Params.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/params.common.js",
            "line": 209,
            "description": "Alias for 'getFromFiles'.",
            "itemtype": "method",
            "name": "files",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the parameter required.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "param value, or all params if no key\n    specified.",
                "type": "String|object"
            },
            "class": "Params.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/partial.common.js",
            "line": 35,
            "description": "This method renders the \"data\" provided into the \"view\" specified.\nThe \"view\" must be the name of one of the files in the current\nMojits \"views\" folder. Returns via the callback.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "data",
                    "description": "The object to be rendered.",
                    "type": "Object"
                },
                {
                    "name": "view",
                    "description": "The view name to be used for rendering.",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "callback signature is function(error, result).",
                    "type": "Function"
                }
            ],
            "class": "Partial.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/partial.common.js",
            "line": 77,
            "description": "This method calls the current mojit's controller with the \"action\"\ngiven and returns its output via the callback.\n\nThe <em>options</em> parameter is optional and may contain:\n<dl>\n    <dt>params</dt><dd>&lt;object&gt; must be broken out explicitly:\n    <dl>\n     <dt>route</dt><dd>&lt;object&gt; Map of key/value pairs.</dd>\n     <dt>url</dt><dd>&lt;object&gt; Map of key/value pairs.</dd>\n     <dt>body</dt><dd>&lt;object&gt; Map of key/value pairs.</dd>\n     <dt>file</dt><dd>&lt;object&gt; Map of key/value pairs.</dd>\n    </dl></dd>\n</dl>",
            "itemtype": "method",
            "name": "invoke",
            "params": [
                {
                    "name": "action",
                    "description": "name of the action to invoke.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "see above.",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "callback function to be called on completion.",
                    "type": "Function"
                }
            ],
            "class": "Partial.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/url.common.js",
            "line": 50,
            "description": "Generates a URL from the given parameters",
            "itemtype": "method",
            "name": "make",
            "params": [
                {
                    "name": "base",
                    "description": "Base mojit defined at the root level of the\n    Mojito application configuration.",
                    "type": "String"
                },
                {
                    "name": "action",
                    "description": "Action reference, concatenated to the base\n    using a period (.) separator.",
                    "type": "String"
                },
                {
                    "name": "routeParams",
                    "description": "used to lookup the route in the routing\n    table.",
                    "type": "Object"
                },
                {
                    "name": "varb",
                    "description": "GET, POST, PUT, DELETE (case insensitive).",
                    "type": "String"
                },
                {
                    "name": "urlParams",
                    "description": "added to the looked up route as query\n    params.",
                    "type": "Object"
                }
            ],
            "class": "Url.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/addons/ac/url.common.js",
            "line": 97,
            "description": "Finds the first matching route from the given URL",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "url",
                    "description": "the URL to find a route for.",
                    "type": "String"
                },
                {
                    "name": "verb",
                    "description": "the HTTP method.",
                    "type": "String"
                }
            ],
            "class": "Url.common",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/beanregistry/registry.client-optional.js",
            "line": 142,
            "description": "Called to register a bean or bean constructor with the bean registry.\nIf this method is called twice with the same bean, the last bean\nwins. Only one type of bean can be in the system at a time.",
            "params": [
                {
                    "name": "name",
                    "description": "Required identifier of this bean.",
                    "type": "String"
                },
                {
                    "name": "bean",
                    "description": "Either a constructor Function or an instance\n    object of a bean.",
                    "type": "Object"
                }
            ],
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/beanregistry/registry.client-optional.js",
            "line": 160,
            "description": "If the bean system has not been instatiated yet, this will\ninstantiate all beans!",
            "return": {
                "description": "contains all beans, each bean is accessible by bean\n    name.",
                "type": "Object"
            },
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/beanregistry/registry.client-optional.js",
            "line": 171,
            "description": "If the bean system has not been instatiated yet, this will\ninstantiate all beans! Then one bean instance is returned by name.",
            "return": {
                "description": "the bean instance, or undefined if it is not\n    registered.",
                "type": "Object"
            },
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/beanregistry/registry.client-optional.js",
            "line": 182,
            "description": "Given an instance of a bean, returns the String name",
            "return": {
                "description": "name of the registered bean, or undefined if it is\n    not a registered bean.",
                "type": "String"
            },
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/io_facade.client-optional.js",
            "line": 48,
            "description": "Executes an io request.",
            "itemtype": "method",
            "name": "execute",
            "params": [
                {
                    "name": "url",
                    "description": "Url to access.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data to send.",
                    "type": "Object"
                },
                {
                    "name": "method",
                    "description": "GET or POST.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/io_facade.client-optional.js",
            "line": 102,
            "description": "Simulate a server response",
            "itemtype": "method",
            "name": "_simulateResponse",
            "params": [
                {
                    "name": "id",
                    "description": "the id of the transaction.",
                    "type": "Number"
                },
                {
                    "name": "details",
                    "description": "the details of the response.",
                    "type": "Object"
                },
                {
                    "name": "badcookie",
                    "description": "Optional. If true simulate cookies\n    turned off.",
                    "type": "Boolean"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/request_formatter.client-optional.js",
            "line": 30,
            "description": "Format web service requests using var foo = function() format\nso that reset is easier.",
            "itemtype": "method",
            "name": "_wsRequestFormatter",
            "return": {
                "description": "the formatted request.",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/request_handler.client-optional.js",
            "line": 61,
            "description": "Adds the request to the queue for processing",
            "params": [
                {
                    "name": "requestObject",
                    "description": "the request Id.",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "callback object.",
                    "type": "Object"
                },
                {
                    "name": "id",
                    "description": "the id of the module making the request.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "the id of the request for tracking.",
                "type": "Number"
            },
            "access": "private",
            "tagname": "",
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/request_handler.client-optional.js",
            "line": 99,
            "description": "once a request has been finished (either complete or aborted)\nthis method handles the final tasks of firing events, formatting\nresponses registering any modules found, and calling callbacks",
            "access": "private",
            "tagname": "",
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/request_handler.client-optional.js",
            "line": 185,
            "description": "Process a complete transaction.",
            "access": "private",
            "tagname": "",
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/requestor.client-optional.js",
            "line": 32,
            "description": "finally prepares the request (stringify) and sends it\nto ioFacade to be sent to the server",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "request",
                    "description": "the request or requests to be sent to the server.",
                    "type": "Array"
                },
                {
                    "name": "forcepost",
                    "description": "if true the request will be sent as a post,\n                           regardless of length.",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "the transactionObject from io.",
                "type": "Object"
            },
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/response_processor.client-optional.js",
            "line": 34,
            "description": "creates a mimic of the yui response object\nfor use in web service calls",
            "params": [
                {
                    "name": "response",
                    "description": "the response from the daliProxy.",
                    "type": "DaliResponseWs"
                }
            ],
            "return": {
                "description": "formated response object.",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/transport.client-optional.js",
            "line": 51,
            "description": "Disables all Ajax requests for the application.",
            "itemtype": "method",
            "name": "disable",
            "params": [
                {
                    "name": "queue",
                    "description": "(Optional) When set to true, queues all\n    requests while disabled.",
                    "type": "Boolean"
                }
            ],
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/transport.client-optional.js",
            "line": 62,
            "description": "Enables sending of requests.",
            "itemtype": "method",
            "name": "enable",
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/transport.client-optional.js",
            "line": 134,
            "description": "Sets the request formatter function for a given request type.",
            "itemtype": "method",
            "name": "setRequestFormatter",
            "params": [
                {
                    "name": "requestType",
                    "description": "The type of request that the\n    formatter should handle.",
                    "type": "String"
                },
                {
                    "name": "formatter",
                    "description": "The function to call to format the\n    request.",
                    "type": "Function"
                }
            ],
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/transport.client-optional.js",
            "line": 147,
            "description": "Sets the response formatter function for all responses.",
            "itemtype": "method",
            "name": "setResponseFormatter",
            "params": [
                {
                    "name": "formatter",
                    "description": "The function to call to format the\n    response object.",
                    "type": "Function"
                }
            ],
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/transport/transport.client-optional.js",
            "line": 158,
            "description": "Called by the bean registry whenever this bean is reinitialized",
            "itemtype": "method",
            "name": "destroy",
            "class": "ActionContext",
            "module": "ActionContextAddon"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/action-context.common.js",
            "line": 29,
            "description": "Returns data in the request and allows you to carry on execution.",
            "itemtype": "method",
            "name": "flush",
            "params": [
                {
                    "name": "data",
                    "description": "The data you want return by the request.",
                    "type": "Object|string"
                },
                {
                    "name": "meta",
                    "description": "Any meta-data required to service the request.",
                    "type": "Object"
                }
            ],
            "class": "ActionContext",
            "module": "ActionContext"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/action-context.common.js",
            "line": 36,
            "description": "Returns data and closes the request.",
            "itemtype": "method",
            "name": "done",
            "params": [
                {
                    "name": "data",
                    "description": "The data you want return by the request.",
                    "type": "Object|string"
                },
                {
                    "name": "meta",
                    "description": "Any meta-data required to service the request.",
                    "type": "Object"
                }
            ],
            "class": "ActionContext",
            "module": "ActionContext"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/action-context.common.js",
            "line": 43,
            "description": "Programatically report an error to Mojito, which will handle it\ngracefully.",
            "itemtype": "method",
            "name": "error",
            "params": [
                {
                    "name": "err",
                    "description": "A normal JavaScript Error object is expected, but you\n    may add a \"code\" property to the error if you want the framework to\n    report a certain HTTP status code for the error. For example, if the\n    status code is 404, Mojito will generate a 404 page.",
                    "type": "Error"
                }
            ],
            "class": "ActionContext",
            "module": "ActionContext"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/action-context.common.js",
            "line": 53,
            "description": "This dispatch function is called one time per Mojito execution. It\ncreates a contextualized Y instance for all further internal dispatches\nto use. It also creates the ActionContext for the mojit.\n\nThe command has three main parts:  the \"instance\", the \"context\", and the\n\"params\".\n<pre>\n command: {\n     instance: ...see below...\n     context: ...see below...\n     params: ...see below...\n }\n</pre>\n\nThe \"instance\" is a partial instance with details of the mojit instance.\nSee `ServerStore.expandInstance()` for details of the structure and which\nfields are required.\n\nThe \"context\" is the request context.  It is built by the\n\"contextualizer\" middleware.\n\nThe \"params\" is a structured set of parameters to pass to the mojit.\n<pre>\n params: {\n     route: {},\n     url: {},\n     body: {},\n     file: {},\n     ...\n }\n</pre>\n\n<pre>\nadapter: {\n     flush: function(data, meta){},\n     done: function(data, meta){},\n     error: function(err){}\n}\n</pre>",
            "itemtype": "method",
            "name": "dispatch",
            "params": [
                {
                    "name": "command",
                    "description": "the \"command\" describing how to dispatch the mojit.\n    See above.",
                    "type": "Map"
                },
                {
                    "name": "adapter",
                    "description": "the output adapter to pass to the mojit. See\n    above.",
                    "type": "Object"
                }
            ],
            "deprecated": true,
            "deprecationMessage": "Use 'ac._dispatch()' instead. See https://github.com/yahoo/mojito/blob/develop/DEPRECATIONS.md\nfor details.",
            "class": "ActionContext",
            "module": "ActionContext"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/action-context.common.js",
            "line": 101,
            "description": "This _dispatch function is called one time per Mojito execution. It\ncreates a contextualized Y instance for all further internal dispatches\nto use. It also creates the ActionContext for the mojit.\n\nThe command has three main parts:  the \"instance\", the \"context\", and the\n\"params\".\n<pre>\n command: {\n     instance: ...see below...\n     context: ...see below...\n     params: ...see below...\n }\n</pre>\n\nThe \"instance\" is a partial instance with details of the mojit instance.\nSee `ServerStore.expandInstance()` for details of the structure and which\nfields are required.\n\nThe \"context\" is the request context.  It is built by the\n\"contextualizer\" middleware.\n\nThe \"params\" is a structured set of parameters to pass to the mojit.\n<pre>\n params: {\n     route: {},\n     url: {},\n     body: {},\n     file: {},\n     ...\n }\n</pre>\n\n<pre>\nadapter: {\n     flush: function(data, meta){},\n     done: function(data, meta){},\n     error: function(err){}\n}\n</pre>",
            "itemtype": "method",
            "name": "_dispatch",
            "params": [
                {
                    "name": "command",
                    "description": "the \"command\" describing how to dispatch the mojit.\n    See above.",
                    "type": "Map"
                },
                {
                    "name": "adapter",
                    "description": "the output adapter to pass to the mojit. See\n    above.",
                    "type": "Object"
                }
            ],
            "class": "ActionContext",
            "module": "ActionContext"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/action-context.common.js",
            "line": 187,
            "description": "Mixes all the Action Context addons into the Action Context",
            "attachactioncontextaddons": "",
            "params": [
                {
                    "name": "addons",
                    "description": "The action context addons.",
                    "type": "Array"
                },
                {
                    "name": "command",
                    "description": "The command object.",
                    "type": "Object"
                },
                {
                    "name": "adapter",
                    "description": "The output adapter.",
                    "type": "Object"
                },
                {
                    "name": "ac",
                    "description": "The action context.",
                    "type": "Y.mojito.ActionContext"
                }
            ],
            "class": "ActionContext",
            "module": "ActionContext"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/dispatch.common.js",
            "line": 36,
            "description": "Modifies the YUI modules in the instance to point to the correct\nlanguage.",
            "itemtype": "method",
            "name": "fixupInstanceLang",
            "params": [
                {
                    "name": "lang",
                    "description": "target language.",
                    "type": "String"
                },
                {
                    "name": "instance",
                    "description": "mojit instance (results of expandInstance()).",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "MojitoDispatcher",
            "module": "ActionContext"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 51,
            "description": "The mojit type",
            "type": "{String}",
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 58,
            "description": "The mojit configuration for this binder",
            "type": "{Object}",
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 65,
            "description": "The context used to generate this page",
            "type": "{Object}",
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 86,
            "description": "Used by mojit binders to broadcast a message between mojits.",
            "itemtype": "method",
            "name": "broadcast",
            "params": [
                {
                    "name": "name",
                    "description": "event name.",
                    "type": "String"
                },
                {
                    "name": "payload",
                    "description": "the payload for the event.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "currently only used to specify target for\n     broadcast. For example, to target only one child mojit for\n     broadcast, use:\n         {target: {slot: 'slot name', viewId: 'DOM view id'}}.",
                    "type": "Object"
                }
            ],
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 104,
            "description": "Allows mojit binders to register to listen to other mojit events",
            "itemtype": "method",
            "name": "listen",
            "params": [
                {
                    "name": "name",
                    "description": "event name.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "called when an event is broadcast with\n    the event data.",
                    "type": "Function"
                }
            ],
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 122,
            "description": "The opposite of the \"listen\" function. Deletes all callback functions\nfrom the listener queue associated with this binder and event type.\nIf event name is not specified, all callbacks associated with this\nbinder are deleted.",
            "itemtype": "method",
            "name": "unlisten",
            "params": [
                {
                    "name": "optional",
                    "description": "name event name.",
                    "type": "String",
                    "optional": true
                }
            ],
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 136,
            "description": "This method renders the \"data\" provided into the \"View\" specified.\nThe \"view\" must be the name of one of the files in the current\nMojits \"views\" folder. Returns via the callback.",
            "itemtype": "method",
            "name": "render",
            "params": [
                {
                    "name": "data",
                    "description": "The data to render.",
                    "type": "Object"
                },
                {
                    "name": "view",
                    "description": "The view name to use for rendering.",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "The callback function.",
                    "type": "Function(err,str)"
                }
            ],
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 150,
            "description": "Used by the mojit binders to invoke actions on themselves within\nMojito.\nThe <em>options</em> parameter is optional and may contain:\n<dl>\n    <dt>params</dt><dd>&lt;object&gt; must be broken out explicitly:\n    <dl>\n     <dt>route</dt><dd>&lt;object&gt; Map of key/value pairs.</dd>\n     <dt>url</dt><dd>&lt;object&gt; Map of key/value pairs.</dd>\n     <dt>body</dt><dd>&lt;object&gt; Map of key/value pairs.</dd>\n     <dt>file</dt><dd>&lt;object&gt; Map of key/value pairs.</dd>\n    </dl></dd>\n    <dt>rpc</dt><dd>&lt;boolean&gt; Means that we are immediately\n    sending the request to the server to answer the invocation.</dd>\n</dl>",
            "itemtype": "method",
            "name": "invoke",
            "params": [
                {
                    "name": "action",
                    "description": "name of the action to invoke.",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "see above.",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "function to be called on completion.",
                    "type": "Function"
                }
            ],
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 226,
            "description": "Refreshes the current DOM view for this binder without recreating the\nbinder instance. Will call the binder's onRefreshView() function when\ncomplete with the new Y.Node and HTMLElement objects.",
            "itemtype": "method",
            "name": "refreshView",
            "params": [
                {
                    "name": "opts",
                    "description": "same as the options for invoke().",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "Called after replacement and onRefreshView have\n    been called, sends data/meta.",
                    "type": "Function"
                }
            ],
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 245,
            "description": "Gets URL parameters",
            "itemtype": "method",
            "name": "getFromUrl",
            "params": [
                {
                    "name": "key",
                    "description": "The name of the parameter required.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "param value, or all params if no key\n    specified.",
                "type": "String|Object"
            },
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 277,
            "description": "Helper function to gather up details about a mojit's children from\nthe Mojito Client.",
            "itemtype": "method",
            "name": "getChildren",
            "return": {
                "description": "slot &lt;String&gt;-->child information &lt;Object&gt;.",
                "type": "Object"
            },
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 288,
            "description": "Clears out a child's view, calling the appropriate life cycle\nfunctions, then destroy's its binder and dereferences it. Will also\ndereference the child from this mojit's children.",
            "itemtype": "method",
            "name": "destroyChild",
            "params": [
                {
                    "name": "id",
                    "description": "Either the slot key of the child, or the DOM\n    view id of the child.",
                    "type": "String"
                },
                {
                    "name": "retainNode",
                    "description": "if true, the binder's node will remain in\n    the dom.",
                    "type": "Boolean"
                }
            ],
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 332,
            "description": "Destroys all children. (Calls destroyChild() for each child.)",
            "itemtype": "method",
            "name": "destroyChildren",
            "params": [
                {
                    "name": "retainNode",
                    "description": "if true, the binder's node will remain in\n    the dom.",
                    "type": "Boolean"
                }
            ],
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojit-proxy.client.js",
            "line": 348,
            "description": "Allows a binder to destroy itself and be removed from Mojito client\nruntime entirely.",
            "itemtype": "method",
            "name": "destroySelf",
            "params": [
                {
                    "name": "retainNode",
                    "description": "if true, the binder's node will remain in\n    the dom.",
                    "type": "Boolean"
                }
            ],
            "class": "MojitProxy",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "line": 15,
            "description": "The top-level Mojito namespace.",
            "type": "{Object}",
            "class": "Y.mojito.Client",
            "module": "MojitoClient"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "line": 256,
            "description": "Subscribe to a MojitoClient lifecycle event.",
            "itemtype": "method",
            "name": "subscribe",
            "params": [
                {
                    "name": "evt",
                    "description": "name of event to subscribe to.",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "callback called when the event fires.",
                    "type": "Function(data)"
                }
            ],
            "class": "Y.mojito.Client",
            "module": "MojitoClient",
            "namespace": "Y.mojito"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "line": 277,
            "description": "Fires a lifecycle event.",
            "itemtype": "method",
            "name": "fireLifecycle",
            "params": [
                {
                    "name": "evt",
                    "description": "The name of event to fire.",
                    "type": "String"
                },
                {
                    "name": "data",
                    "description": "The data to pass to listeners.",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.mojito.Client",
            "module": "MojitoClient",
            "namespace": "Y.mojito"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "line": 296,
            "description": "Fired at the beginning of the startup of MojitoClient.\n\nThe data contains the following:\n<dl>\n <dt><code>config</code></dt>\n <dd>the config object used to initialize the MojitoClient</dd>\n</dl>\n\nAny change to the config will be picked up and used by MojitoClient.",
            "params": [
                {
                    "name": "data",
                    "description": "The data for the event.",
                    "type": "Object"
                }
            ],
            "class": "Y.mojito.Client",
            "module": "MojitoClient",
            "namespace": "Y.mojito"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "line": 309,
            "description": "Fired at the end of the startup of MojitoClient.",
            "params": [
                {
                    "name": "data",
                    "description": "The data for the event. (Empty in this case).",
                    "type": "Object"
                }
            ],
            "class": "Y.mojito.Client",
            "module": "MojitoClient",
            "namespace": "Y.mojito"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "line": 314,
            "description": "Fired before the binders are attached to the page.\n\nThe data contains the following:\n<dl>\n <dt><code>binderMap</code></dt>\n <dd>the details of the binders to attach to the page</dd>\n <dt><code>parentId</code></dt>\n <dd>[optional] the parent binder view id to attach any children</dd>\n <dt><code>topLevelMojitViewId</code></dt>\n <dd>[optional] the topmost (root) binder view id to attach as a child to\n     the parent</dd>\n</dl>\n\nAny change to the data will be picked up and used by MojitoClient.",
            "params": [
                {
                    "name": "data",
                    "description": "The data for the event.",
                    "type": "Object"
                }
            ],
            "class": "Y.mojito.Client",
            "module": "MojitoClient",
            "namespace": "Y.mojito"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "line": 332,
            "description": "Fired after the binders are attached to the page.",
            "params": [
                {
                    "name": "data",
                    "description": "The data for the event. (Empty in this case).",
                    "type": "Object"
                }
            ],
            "class": "Y.mojito.Client",
            "module": "MojitoClient",
            "namespace": "Y.mojito"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "line": 461,
            "description": "Given a set of binder information, initialize binder instances and\nbind them to the page.",
            "itemtype": "method",
            "name": "attachBinders",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "binderMap",
                    "description": "viewId ==> binder data, contains all we\n    need from the mojit dispatch's meta object about all the binders\n    that were executed to create the DOM addition recently added to\n    the document.",
                    "type": "Object"
                },
                {
                    "name": "parentId",
                    "description": "the parent binder view id to attach any\n    children.",
                    "type": "String"
                },
                {
                    "name": "topLevelMojitViewId",
                    "description": "the topmost (root) binder view\n    id to attach as a child to the parent.",
                    "type": "String"
                }
            ],
            "class": "Y.mojito.Client",
            "module": "MojitoClient",
            "namespace": "Y.mojito"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "line": 678,
            "description": "Used for binders to execute their actions through the Mojito\nframework through their proxies.",
            "itemtype": "method",
            "name": "executeAction",
            "params": [
                {
                    "name": "command",
                    "description": "must contain mojit id and action to execute.",
                    "type": "Object"
                },
                {
                    "name": "viewId",
                    "description": "the view id of the current mojit, which is\n    executing the action.",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "callback to run when complete.",
                    "type": "Function"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.mojito.Client",
            "module": "MojitoClient",
            "namespace": "Y.mojito"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "line": 849,
            "description": "Pause the Mojito Client and all mojits that are running. This will\nnotify all binders that they have been paused by calling their\nonPause() functions. It will prevent the immediate execution of\nseveral mojit proxy operations that might cause a long process to\nbegin (especially things that might go to the server).\n\nTo resume, simply call .resume(). This will immediately execute all\nactions that occurred while Mojito was paused.",
            "itemtype": "method",
            "name": "pause",
            "class": "Y.mojito.Client",
            "module": "MojitoClient",
            "namespace": "Y.mojito"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/mojito-client.client.js",
            "line": 874,
            "description": "Resumes the Mojito client after it has been paused (see method\n\"pause\"). If there are any queued actions that were executed and\ncached during the pause, calling resume() will immediately execute\nthem. All binders are notified through their onResume() function that\nthey are been resumed.",
            "itemtype": "method",
            "name": "resume",
            "class": "Y.mojito.Client",
            "module": "MojitoClient",
            "namespace": "Y.mojito"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/rest.common.js",
            "line": 20,
            "access": "private",
            "tagname": "",
            "class": "Y.mojito.lib.REST",
            "module": "CommonLibs"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/rest.common.js",
            "line": 55,
            "access": "private",
            "tagname": "",
            "class": "Y.mojito.lib.REST",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/rest.common.js",
            "line": 97,
            "description": "Makes a RESTful GET request to specified URL",
            "itemtype": "method",
            "name": "GET",
            "params": [
                {
                    "name": "url",
                    "description": "RESTful URL to hit.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "parameters to add to the request.",
                    "type": "Object"
                },
                {
                    "name": "config",
                    "description": "may contain 'headers' or 'timeout' values.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "called with response or error.",
                    "type": "Function"
                }
            ],
            "class": "Y.mojito.lib.REST",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/rest.common.js",
            "line": 111,
            "description": "Makes a RESTful POST request to specified URL",
            "itemtype": "method",
            "name": "POST",
            "params": [
                {
                    "name": "url",
                    "description": "RESTful URL to hit.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "parameters to add to the request.",
                    "type": "Object"
                },
                {
                    "name": "config",
                    "description": "may contain 'headers' or 'timeout' values.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "called with response or error.",
                    "type": "Function"
                }
            ],
            "class": "Y.mojito.lib.REST",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/rest.common.js",
            "line": 125,
            "description": "Makes a RESTful PUT request to specified URL",
            "itemtype": "method",
            "name": "PUT",
            "params": [
                {
                    "name": "url",
                    "description": "RESTful URL to hit.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "parameters to add to the request.",
                    "type": "Object"
                },
                {
                    "name": "config",
                    "description": "may contain 'headers' or 'timeout' values.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "called with response or error.",
                    "type": "Function"
                }
            ],
            "class": "Y.mojito.lib.REST",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/rest.common.js",
            "line": 139,
            "description": "Makes a RESTful DELETE request to specified URL",
            "itemtype": "method",
            "name": "DELETE",
            "params": [
                {
                    "name": "url",
                    "description": "RESTful URL to hit.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "parameters to add to the request.",
                    "type": "Object"
                },
                {
                    "name": "config",
                    "description": "may contain 'headers' or 'timeout' values.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "called with response or error.",
                    "type": "Function"
                }
            ],
            "class": "Y.mojito.lib.REST",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/rest.common.js",
            "line": 153,
            "description": "Makes a RESTful HEAD request to specified URL",
            "itemtype": "method",
            "name": "HEAD",
            "params": [
                {
                    "name": "url",
                    "description": "RESTful URL to hit.",
                    "type": "String"
                },
                {
                    "name": "params",
                    "description": "parameters to add to the request.",
                    "type": "Object"
                },
                {
                    "name": "config",
                    "description": "may contain 'headers' or 'timeout' values.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "called with response or error.",
                    "type": "Function"
                }
            ],
            "class": "Y.mojito.lib.REST",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/route-maker.common.js",
            "line": 273,
            "description": "Finds a route for a given method+URL",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "url",
                    "description": "the URL to find a route for.",
                    "type": "String"
                },
                {
                    "name": "verb",
                    "description": "the HTTP method.",
                    "type": "String"
                }
            ],
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/route-maker.common.js",
            "line": 322,
            "description": "For optimization. Call this to get the computed routes that can be\npassed to the constructor to avoid recomputing the routes.",
            "itemtype": "method",
            "name": "getComputedRoutes",
            "return": {
                "description": "computed routes.",
                "type": "Object"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/route-maker.common.js",
            "line": 333,
            "description": "Returns a matching route for the given URI",
            "itemtype": "method",
            "name": "_matchToInternal",
            "params": [
                {
                    "name": "uri",
                    "description": "The uri to find a route for.",
                    "type": "String"
                },
                {
                    "name": "verb.",
                    "description": "The HTTP verb for the route.",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/util.common.js",
            "line": 75,
            "description": "Unicode escapes the \"Big 5\" HTML characters (<, >, ', \", and &). Note\nthat only strings are escaped by this routine. If you want to ensure\nthat an entire object or array is escaped use the util.cleanse() call.",
            "params": [
                {
                    "name": "obj",
                    "description": "The object to encode/escape.",
                    "type": "Object"
                }
            ],
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/util.common.js",
            "line": 98,
            "description": "Converts unicode escapes for the HTML characters (<, >, ', \", and &)\nback into their original HTML form. Note that only strings are\nescaped by this routine. If you want to ensure that an entire object\nor array is escaped use the util.cleanse() call.",
            "params": [
                {
                    "name": "obj",
                    "description": "The object to encode/escape.",
                    "type": "Object"
                }
            ],
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/util.common.js",
            "line": 120,
            "description": "Cleanses string keys and values in an object, returning a new object\nwhose strings are escaped using the escape function provided. The\ndefault escape function is the util.htmlEntitiesToUnicode function.",
            "params": [
                {
                    "name": "obj",
                    "description": "The object to cleanse.",
                    "type": "Object"
                },
                {
                    "name": "escape",
                    "description": "The escape function to run. Default is\n    util.htmlEntitiesToUnicode.",
                    "type": "Function"
                }
            ],
            "return": {
                "description": "The cleansed object.",
                "type": "Object"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/util.common.js",
            "line": 180,
            "description": "Uncleanses string keys and values in an object, returning a new\nobject whose strings are unescaped via the unicodeToHtmlEntities\nroutine.",
            "params": [
                {
                    "name": "obj",
                    "description": "The object to cleanse.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The cleansed object.",
                "type": "Object"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/util.common.js",
            "line": 214,
            "description": "Recursively merge properties of two objects",
            "itemtype": "method",
            "name": "mergeRecursive",
            "params": [
                {
                    "name": "dest",
                    "description": "The destination object.",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "typeMatch",
                    "description": "Only replace if src and dest types are\n    the same type if true.",
                    "type": "Boolean"
                }
            ],
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/autoload/util.common.js",
            "line": 284,
            "description": "Used to merge meta objects into each other. Special consideration for\ncertain headers values like 'content-type'.",
            "itemtype": "method",
            "name": "metaMerge",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "to",
                    "description": "The target object.",
                    "type": "Object"
                },
                {
                    "name": "from",
                    "description": "The source object.",
                    "type": "Object"
                },
                {
                    "name": "clobber",
                    "description": "True to overwrite existing properties.",
                    "type": "Boolean"
                }
            ],
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/mu/parser.js",
            "line": 55,
            "description": "Responsible for actually parsing lines. Converts them into the following\ntoken form:\n\n[\n    {'type': 'string', 'value': 'Hello '},\n    {'type': 'variable', 'value': 'name'}\n]",
            "params": [
                {
                    "name": "text",
                    "description": "The source text of the line.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The parsed tokens.",
                "type": "Array"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/mu/preprocessor.js",
            "line": 11,
            "description": "Preprocessor that is responsible for expanding partials in the AST.",
            "params": [
                {
                    "name": "parsed",
                    "description": "The parsed source.",
                    "type": "Parsed"
                },
                {
                    "name": "root",
                    "description": "The root that templates should be searched for from.",
                    "type": "String"
                },
                {
                    "name": "ext",
                    "description": "The extension that should be added to filenames.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback to call when partials are expanded.",
                    "type": "Function"
                }
            ],
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/mu/preprocessor.js",
            "line": 50,
            "description": "Preprocessor that actually expands the partials into the parsed AST.",
            "params": [
                {
                    "name": "parsed",
                    "description": "The parsed source.",
                    "type": "Parsed"
                },
                {
                    "name": "partials",
                    "description": "The partials to use to expand the parsed source.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The expanded AST.",
                "type": "Parsed"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/mu/preprocessor.js",
            "line": 78,
            "description": "Used to verify that the AST is well formed.",
            "params": [
                {
                    "name": "parsed",
                    "description": "The parsed source.",
                    "type": "Parsed"
                }
            ],
            "return": {
                "description": "The parsed source, untouched.",
                "type": "Parsed"
            },
            "throws": [
                "{Error} If the source is not well formed."
            ],
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/mu/preprocessor.js",
            "line": 131,
            "description": "Preprocessor used to clean extra, useless, tokens from the AST. The parser\ndoes a lazy job at ensuring it is perfectly generated, so this function\nis used to remedy that.\n\nIt does the following:\n    - Remove whitespace and newline when only a tag exists on a line.\n    - Remove useless empty string tokens that the parser generates.\n    - Escapes quotes in string tokens as to not break compiling.",
            "params": [
                {
                    "name": "parsed",
                    "description": "The parsed source to clean.",
                    "type": "Parsed"
                }
            ],
            "return": {
                "description": "The cleaned up parsed source.",
                "type": "Parsed"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/mu/preprocessor.js",
            "line": 189,
            "description": "Returns a list of the original source's lines.",
            "params": [
                {
                    "name": "parsed",
                    "description": "The parsed source.",
                    "type": "Parsed"
                }
            ],
            "return": {
                "description": "The original source lines.",
                "type": "Array"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/mu/preprocessor.js",
            "line": 201,
            "description": "Returns the source in a string format.",
            "params": [
                {
                    "name": "parsed",
                    "description": "The parsed source.",
                    "type": "Parsed"
                }
            ],
            "return": {
                "description": "The raw source that generated the parse tree.",
                "type": "String"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/mu/preprocessor.js",
            "line": 214,
            "description": "Used with Array.filter to remove falsy items.",
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/mu/preprocessor.js",
            "line": 221,
            "description": "Gets a list of all partial names in the parsed tree.\n\nFIXME: returns duplicates if the name appears multiple times.",
            "params": [
                {
                    "name": "parsed",
                    "description": "The parsed source.",
                    "type": "Parsed"
                }
            ],
            "return": {
                "description": "List of the partial names found.",
                "type": "Array"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/mu/preprocessor.js",
            "line": 240,
            "description": "Flattens a two dimensional array.",
            "params": [
                {
                    "name": "arr",
                    "description": "The array of arrays to flatten.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "The flattened array.",
                "type": "Array"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/Mu.js",
            "line": 13,
            "description": "Compiles a template into a executable function. This performs a parse check\nto make sure that the template is well formed.",
            "example": [
                "\n\nmyTemplate.mu\n\n    Hello {{name}}!\n\nrun.js\n\n    var util = require('util'),\n               Mu = require('./lib/mu');\n    Mu.compile('myTemplate', function (compiled) {\n        compiled({name: 'Jim'}).addListener('data', function (c) { util.print(c) })\n    });\n\nRunning run.js will produce:\n\n    Hello Jim!"
            ],
            "params": [
                {
                    "name": "filename",
                    "description": "The filename of the template to load, parse and\n               compile. This should not include the templateRoot or extension.",
                    "type": "String"
                },
                {
                    "name": "callback",
                    "description": "The callback that will be called on success or error.",
                    "type": "Function"
                }
            ],
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/Mu.js",
            "line": 59,
            "description": "Compiles a template as text instead of a filename. You are responsible for\nproviding your own partials as they will not be expanded via files.",
            "example": [
                "\n\nvar util = require('util');\nvar tmpl = \"Hello {{> part}}. What is your {{name}}?\";\nvar partials = {part: \"World\"};\nvar compiled = Mu.compileText(tmpl, partials);\ncompiled({name: 'Jim'}).addListener('data', function (c) { util.puts(c); });"
            ],
            "params": [
                {
                    "name": "text",
                    "description": "The main template to compile.",
                    "type": "String"
                },
                {
                    "name": "partials",
                    "description": "The partials to expand when encountered. The object\n               takes the form of {partialName: partialText}",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The compiled template.",
                "type": "Function"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/Mu.js",
            "line": 94,
            "description": "Shorcut to parse, compile and render a template.",
            "params": [
                {
                    "name": "filename",
                    "description": "The filename of the template to load, parse and\n               compile. This should not include the templateRoot or extension.",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "The data that should be used when rendering the template.",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "The callback that will be called on success or error.",
                    "type": "Function"
                }
            ],
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/Mu.js",
            "line": 126,
            "description": "HTML escapes a string.",
            "params": [
                {
                    "name": "string",
                    "description": "The string to escape.",
                    "type": "String"
                }
            ],
            "return": {
                "description": "The escaped string.",
                "type": "String"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/Mu.js",
            "line": 136,
            "description": "Normalizes the param by calling it if it is a function, calling .toString\nor simply returning a blank string.",
            "params": [
                {
                    "name": "val",
                    "description": "The value to normalize.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The normalized value.",
                "type": "String"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/libs/Mulib/Mu.js",
            "line": 153,
            "description": "Depending on the val passed into this function, different things happen.\n\nIf val is a boolean, fn is called if it is true and the return value is\nreturned.\nIf val is an Array, fn is called once for each element in the array and\nthe strings returned from those calls are collected and returned.\nElse if val is defined fn is called with the val.\nOtherwise an empty string is returned.",
            "params": [
                {
                    "name": "context",
                    "description": "The context that fn is called with if the val\n               is a true boolean.",
                    "type": "Object"
                },
                {
                    "name": "val",
                    "description": "The value that decides what happens.",
                    "type": "Boolean|Array|Object"
                },
                {
                    "name": "fn",
                    "description": "The callback.",
                    "type": "Function"
                }
            ],
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/middleware/mojito-contextualizer.js",
            "line": 24,
            "description": "The request contextualizer. Middleware which adds context to a request.",
            "is_constructor": 1,
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/middleware/mojito-contextualizer.js",
            "line": 132,
            "description": "Export a function capable of constructing a new contextualizer.",
            "params": [
                {
                    "name": "config",
                    "description": "Data to configure the new contextualizer.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The contextualizer.",
                "type": "Object"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/middleware/mojito-handler-static.js",
            "line": 278,
            "description": "Export function to create the static handler.",
            "params": [
                {
                    "name": "config",
                    "description": "The configuration data for the handler.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "A static handler.",
                "type": "Object"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/middleware/mojito-handler-tunnel.js",
            "line": 192,
            "description": "Export a function which can create the handler.",
            "params": [
                {
                    "name": "config",
                    "description": "Data to configure the handler.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The newly constructed handler.",
                "type": "Object"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/middleware/mojito-parser-body.js",
            "line": 13,
            "description": "Export a function which can create a body parser.",
            "return": {
                "description": "The newly constructed body parser.",
                "type": "Object"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/middleware/mojito-parser-cookies.js",
            "line": 13,
            "description": "Export a function which can create a cookie parser.",
            "return": {
                "description": "The newly constructed cookie parser.",
                "type": "Object"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/middleware/mojito-router.js",
            "line": 125,
            "description": "Finds a route for a given method+URL",
            "itemtype": "method",
            "name": "getRoute",
            "params": [
                {
                    "name": "method",
                    "description": "The HTTP method.",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "The URL to find a route for.",
                    "type": "String"
                },
                {
                    "name": "routeMaker",
                    "description": "The route maker.",
                    "type": "RouteMaker"
                }
            ],
            "return": {
                "description": "The route.",
                "type": "Object"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/middleware/mojito-router.js",
            "line": 167,
            "description": "Export a function capable of building a viable router.",
            "params": [
                {
                    "name": "config",
                    "description": "Data to configure the router.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "The newly constructed router.",
                "type": "Object"
            },
            "class": "Y.mojito.lib.MojitoRouter",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/app/mojits/DaliProxy/autoload/store-provider.server.js",
            "line": 26,
            "description": "Declaration of store requirement.",
            "access": "private",
            "tagname": "",
            "params": [
                {
                    "name": "rs",
                    "description": "The resource store.",
                    "type": "ResourceStore"
                }
            ],
            "class": "MojitoServer",
            "module": "CommonLibs",
            "namespace": "Y.mojito.lib"
        },
        {
            "file": "mojito_src/source/lib/index.js",
            "line": 43,
            "class": "MojitoServer",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/index.js",
            "line": 91,
            "description": "Adds the Mojito framework to the Express application.\n\nYou only need to call one of addMojitoToExpressApp() or createServer().\nIf you want to create your own Express app do that then use\naddMojitoToExpressApp().  Otherwise Mojito can create an app for you\nif you use createServer().",
            "itemtype": "method",
            "name": "addMojitoToExpressApp",
            "params": [
                {
                    "name": "app",
                    "description": "Express application.",
                    "type": "Object"
                },
                {
                    "name": "options",
                    "description": "The directory to start the application in.",
                    "type": "Object"
                }
            ],
            "class": "MojitoServer",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/index.js",
            "line": 332,
            "description": "Creates an Express application with the Mojito framework already added.",
            "itemtype": "method",
            "name": "createServer",
            "params": [
                {
                    "name": "options",
                    "description": "Options for starting the app.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "Express application.",
                "type": "Object"
            },
            "class": "MojitoServer",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/index.js",
            "line": 364,
            "class": "MojitoServer",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/index.js",
            "line": 368,
            "class": "MojitoServer",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/index.js",
            "line": 372,
            "description": "Surfaces the CLI.",
            "params": [
                {
                    "name": "path",
                    "description": "The path used to locate resources.",
                    "type": "String"
                }
            ],
            "class": "MojitoServer",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/output-handler.server.js",
            "line": 125,
            "class": "OutputHandler",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/server-log.js",
            "line": 146,
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 260,
            "description": "Preloads everything in the app, and as well pertinent parts of\nthe framework.",
            "itemtype": "method",
            "name": "preload",
            "params": [
                {
                    "name": "appContext",
                    "description": "the base context for reading configuration.",
                    "type": "Object"
                },
                {
                    "name": "appConfig",
                    "description": "overrides for the app config.",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Nothing"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 356,
            "description": "Sets the logger object.",
            "itemtype": "method",
            "name": "setLogger",
            "params": [
                {
                    "name": "l",
                    "description": "object containing a log(message,level,source) function",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Nothing"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 368,
            "description": "Returns, via callback, the fully expanded mojit instance specification.",
            "itemtype": "method",
            "name": "getSpec",
            "params": [
                {
                    "name": "env",
                    "description": "either \"client\" or \"server\"",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "the ID of the spec to return",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "the runtime context for the spec",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "callback used to return the results (or error)",
                    "type": "Function(err,spec)"
                }
            ],
            "return": {
                "description": "results returned via the callback parameter",
                "type": "Nothing"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 395,
            "description": "Returns, via callback, the details of the mojit type.",
            "itemtype": "method",
            "name": "getType",
            "params": [
                {
                    "name": "env",
                    "description": "either \"client\" or \"server\"",
                    "type": "String"
                },
                {
                    "name": "type",
                    "description": "the mojit type",
                    "type": "String"
                },
                {
                    "name": "context",
                    "description": "the runtime context for the spec",
                    "type": "Object"
                },
                {
                    "name": "callback",
                    "description": "callback used to return the results (or error)",
                    "type": "Function(err,spec)"
                }
            ],
            "return": {
                "description": "results returned via the callback parameter",
                "type": "Nothing"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 422,
            "description": "This just calls expandInstanceForEnv() with `env` set to `server`.",
            "itemtype": "method",
            "name": "expandInstance",
            "params": [
                {
                    "name": "instance",
                    "description": "Partial instance to expand.",
                    "type": "Map"
                },
                {
                    "name": "ctx",
                    "description": "The request context.",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "callback used to return the results (or error)",
                    "type": "Function(err,instance)"
                }
            ],
            "return": {
                "description": "results returned via the callback parameter",
                "type": "Nothing"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 437,
            "description": "This method takes a partial instance and expands it to all details needed\nto run the mojit.\n\nOnly `base` or `type` fields are required. You should only specify one.\n\n<pre>\n instance: {\n     base: string\n         // specifies a \"base\" instance which this instance will extend\n         // the value refers to a key of `specs` in `application.json`\n     type: string\n         // specifies the mojit type\n     action: \"\",\n         // specifies a default action if the instance isn't dispatched\n         // with a specific one.\n     config: object\n         // the config for the mojit\n         // this will be augmented (appropriately) with the mojit type\n         // defaults found in the type's `defaults.json`\n     appConfig: object\n         // the application config (appropriate for the context)\n     assetRoot: \"\",\n         // path to directory containing assets\n         // the path will be a URL if `env` is `client` otherwise it's a\n         // filesystem path\n     definition: object\n         // the body of the `defintion.json` for the mojit type\n     defaults: object\n         // the body of the `defaults.json` for the mojit type\n     yui: {\n         // details for generating a YUI sandbox for this instance\n         config: {\n             // configuration details for the YUI.GlobalConfig.groups (or\n             // an equivalent).\n             // The module paths are given as `fullpath` and contain\n             // either a URL if `env' is `client` or a filesystem path if\n             // `env` is `server`\n         },\n         requires: []\n             // list of YUI modules that this instance requires\n     }\n     actions: array\n         // list of paths to the YUI modules containing actions\n     controller: string\n         // path to controller\n         // the path will be a URL if `env` is `client` otherwise it's a\n         // filesystem path\n     lang:\n         // path to YUI module of the language bundle\n         // the path will be a URL if `env` is `client` otherwise it's a\n         // filesystem path\n     models: object\n         // list of models used by the mojit type\n         // the key is the model name, and the value is the path to the\n         // model file\n         // the path will be a URL if `env` is `client` otherwise it's a\n         // filesystem path\n     views: {\n         // list of views in the mojit type\n         // the key is the view name, and the value is details about the\n         // view\n         view-name: {\n             \"content-path\": \"\",\n                 // the path to use to load the body of the view\n                 // the path will be a URL if `env` is `client` otherwise\n                 // it's a filesystem path\n             \"engine\": \"\",\n                 // which engine is used to render the view\n             \"binder-path\": \"\",\n                 // the path to the binder\n                 // the path will be a URL if `env` is `client` otherwise\n                 // it's a filesystem path\n             \"binder-module\": \"\"\n                 // the YUI module name of the binder\n         }\n     }\n }\n</pre>",
            "itemtype": "method",
            "name": "expandInstanceForEnv",
            "params": [
                {
                    "name": "env",
                    "description": "\"client\" or \"server\"",
                    "type": "String"
                },
                {
                    "name": "instance",
                    "description": "partial instance to expand",
                    "type": "Object"
                },
                {
                    "name": "ctx",
                    "description": "the runtime context for the instance",
                    "type": "Object"
                },
                {
                    "name": "cb",
                    "description": "callback used to return the results (or error)",
                    "type": "Function(err,instance)"
                }
            ],
            "return": {
                "description": "results returned via the callback parameter",
                "type": "Nothing"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 609,
            "description": "gets application configuration",
            "itemtype": "method",
            "name": "getAppConfig",
            "params": [
                {
                    "name": "ctx",
                    "description": "the runtime context under which to load the config",
                    "type": "Object"
                },
                {
                    "name": "name",
                    "description": "type of config to read:\n    - definition:  reads ./application.json\n    - package:  reads ./package.json\n    - routes:  reads ./routes.json (or whatever was configured in\n                 appConfig('definition').routesFiles)",
                    "type": "String"
                }
            ],
            "return": {
                "description": "config object",
                "type": "Object"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 641,
            "description": "Returns the routes configured in the application.",
            "itemtype": "method",
            "name": "getRoutes",
            "params": [
                {
                    "name": "ctx",
                    "description": "runtime context under which to load the routes",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "routes",
                "type": "Object"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 682,
            "description": "Returns the filesystem location of the static URL.\nReturns undefined if given URL isn't part of the app.",
            "itemtype": "method",
            "name": "fileFromStaticHandlerURL",
            "params": [
                {
                    "name": "url",
                    "description": "static URL",
                    "type": "String"
                }
            ],
            "return": {
                "description": "path on filesystem of specified URL, or undefined",
                "type": "String"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 696,
            "description": "Returns the YUI configuration object which tells YUI about the\nYUI modules in all the mojits.",
            "itemtype": "method",
            "name": "getYuiConfigAllMojits",
            "params": [
                {
                    "name": "env",
                    "description": "\"client\" or \"server\"",
                    "type": "String"
                },
                {
                    "name": "ctx",
                    "description": "runtime context for YUI configuration",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "YUI configuration for all mojits",
                "type": "Object"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 759,
            "description": "Returns the YUI configuration object which tells YUI about the\nYUI modules in the Mojito framework.",
            "itemtype": "method",
            "name": "getYuiConfigFw",
            "params": [
                {
                    "name": "env",
                    "description": "\"client\" or \"server\"",
                    "type": "String"
                },
                {
                    "name": "ctx",
                    "description": "runtime context for YUI configuration",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "YUI configuration for Mojito framework",
                "type": "Object"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 800,
            "description": "Returns the YUI configuration object which tells YUI about the\nYUI modules in the application (which aren't part of a mojit).",
            "itemtype": "method",
            "name": "getYuiConfigApp",
            "params": [
                {
                    "name": "env",
                    "description": "\"client\" or \"server\"",
                    "type": "String"
                },
                {
                    "name": "ctx",
                    "description": "runtime context for YUI configuration",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "YUI configuration for the app-level modules",
                "type": "Object"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 841,
            "description": "returns a serializeable object used to initialize Mojito on the client\n\nFUTURE: [Issue 105] Cache the output of this function\ncache key:  all of ctx",
            "itemtype": "method",
            "name": "serializeClientStore",
            "params": [
                {
                    "name": "context",
                    "description": "runtime context",
                    "type": "Object"
                },
                {
                    "name": "instance",
                    "description": "DEPRECATED:  list of instances to deploy to the client\n                 (only instances with IDs will be deployable)",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "object that should be serialized and used to initialize the MojitoClient",
                "type": "Object"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 896,
            "description": "Returns a list of all mojit types in the application.",
            "itemtype": "method",
            "name": "listAllMojits",
            "params": [
                {
                    "name": "env",
                    "description": "\"client\" or \"server\"",
                    "type": "String"
                }
            ],
            "return": {
                "description": "list of mojit types",
                "type": "Array"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 916,
            "description": "Returns details about all mojits in the application.",
            "itemtype": "method",
            "name": "getAllMojits",
            "params": [
                {
                    "name": "env",
                    "description": "\"client\" or \"server\"",
                    "type": "String"
                },
                {
                    "name": "ctx",
                    "description": "runtime context",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "keys are mojit type names, values are details about each mojit",
                "type": "Object"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 947,
            "description": "Given a set of known contexts, finds the best match for a runtime context.\nGives special consideration to the \"lang\" key in the contexts.",
            "itemtype": "method",
            "name": "_findBestContext",
            "params": [
                {
                    "name": "currentContext",
                    "description": "runtime context",
                    "type": "Object"
                },
                {
                    "name": "contexts",
                    "description": "a mapping of context key to context",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "null or the context key of the best match",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1005,
            "description": "Returns details about a mojit type.",
            "itemtype": "method",
            "name": "getMojitTypeDetails",
            "params": [
                {
                    "name": "env",
                    "description": "\"client\" or \"server\"",
                    "type": "String"
                },
                {
                    "name": "ctx",
                    "description": "runtime context",
                    "type": "Object"
                },
                {
                    "name": "mojitType",
                    "description": "mojit type",
                    "type": "String"
                },
                {
                    "name": "dest",
                    "description": "object in which to place the results",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "returns the \"dest\" parameter, which has had details added to it",
                "type": "Object"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1299,
            "description": "Returns details on how to make rollups for app-level resources.",
            "itemtype": "method",
            "name": "getRollupsApp",
            "params": [
                {
                    "name": "env",
                    "description": "\"client\" or \"server\"",
                    "type": "String"
                },
                {
                    "name": "ctx",
                    "description": "runtime context",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "object describing where to put the rollup and what it should contain",
                "type": "Object"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1331,
            "description": "Returns details on how to make rollups for mojit-level resources.\n\nThis example comes from GSG5.\n{ FlickrDetail:\n     dest: '/blah/blah/mojits/FlickrDetail/rollup.client.js'\n     srcs: [\n         '/blah/blah/mojits/FlickrDetail/controller.common.js',\n         '/blah/blah/mojits/FlickrDetail/binders/index.js',\n         '/blah/blah/mojits/FlickrDetail/lang/FlickrDetail_de.js',\n         '/blah/blah/mojits/FlickrDetail/lang/FlickrDetail_en-US.js'\n     ]\n}",
            "itemtype": "method",
            "name": "getRollupsMojits",
            "params": [
                {
                    "name": "env",
                    "description": "\"client\" or \"server\"",
                    "type": "String"
                },
                {
                    "name": "ctx",
                    "description": "runtime context",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "object describing where to put the rollup and what it should contain",
                "type": "Object"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1397,
            "description": "Returns details on how to make inline CSS for mojits.\n\nThis example comes from (a modified) GSG5.\n[ {\n     context: { device: 'iphone' },\n     mojitName: 'FlickrDetail',\n     yuiModuleName: 'inlinecss/FlickrDetail',\n     dest: '/blah/mojits/FlickrDetail/autoload/compiled' +\n         '/css.iphone.client.js',\n     srcs: {\n         '/static/FlickrDetail/assets/index.css':\n         '    /blah/mojits/FlickrDetail/assets/index.iphone.css',\n         '/static/FlickrDetail/assets/message.css':\n         '    /blah/mojits/FlickrDetail/assets/message.css'\n  }\n]",
            "itemtype": "method",
            "name": "getInlineCssMojits",
            "params": [
                {
                    "name": "env",
                    "description": "\"client\" or \"server\"",
                    "type": "String"
                },
                {
                    "name": "ctxFilter",
                    "description": "(optional) runtime context to restrict results to",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "object describing where to put the inline CSS file and what it should contain",
                "type": "Array"
            },
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1495,
            "description": "the \"static\" version of the application.json is the version that has\nthe context applied that was given at server-start time.",
            "itemtype": "method",
            "name": "_readAppConfigStatic",
            "return": {
                "description": "static config",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1517,
            "description": "Read the application's dimensions.json file for YCB processing. If not\navailable, fall back to the framework's default dimensions.json.",
            "itemtype": "method",
            "name": "_readYcbDimensions",
            "return": {
                "description": "contents of the dimensions.json file",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1542,
            "description": "Perform some light validation for YCB dimensions JSON objects. It should\nlook something like this:\n[{\n    \"dimensions\": [\n        \"dim1\": {},\n        \"dim2\": {},\n        ...\n    ]\n}]",
            "itemtype": "method",
            "name": "_isValidYcbDimensions",
            "params": [
                {
                    "name": "dimensions",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1568,
            "description": "preload metadata about all resources in the application (and Mojito framework)",
            "itemtype": "method",
            "name": "_preloadMeta",
            "return": {
                "description": "work down via other called methods",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1623,
            "description": "preloads metadata about resources in the application directory\n(but not node_modules/)",
            "itemtype": "method",
            "name": "_preloadApp",
            "params": [
                {
                    "name": "pkg",
                    "description": "metadata (name and version) about the app's package",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "work down via other called methods",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1667,
            "description": "preloads metadata about resources in a package\n(but not subpackages in its node_modules/)",
            "itemtype": "method",
            "name": "_preloadPackage",
            "params": [
                {
                    "name": "info",
                    "description": "metadata about the package",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "work down via other called methods",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1716,
            "description": "preloads metadata about resource in a directory",
            "itemtype": "method",
            "name": "_preloadDirBundle",
            "params": [
                {
                    "name": "dir",
                    "description": "directory path",
                    "type": "String"
                },
                {
                    "name": "pkg",
                    "description": "metadata (name and version) about the package",
                    "type": "Object"
                },
                {
                    "name": "loadConfig",
                    "description": "whether to also preload metadata about the configuration files",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "work down via other called methods",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1773,
            "itemtype": "method",
            "name": "_parseResourceArchetype",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1797,
            "itemtype": "method",
            "name": "_parseResourceCommand",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1820,
            "itemtype": "method",
            "name": "_parseResourceMiddleware",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1843,
            "itemtype": "method",
            "name": "_parseResourceConfig",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1883,
            "itemtype": "method",
            "name": "_parseResourceAction",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1907,
            "itemtype": "method",
            "name": "_parseResourceAddon",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1932,
            "itemtype": "method",
            "name": "_parseResourceAsset",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 1976,
            "itemtype": "method",
            "name": "_parseResourceBinder",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2023,
            "itemtype": "method",
            "name": "_parseResourceController",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2047,
            "itemtype": "method",
            "name": "_parseResourceModel",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2071,
            "itemtype": "method",
            "name": "_parseResourceSpec",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2124,
            "itemtype": "method",
            "name": "_parseResourceView",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2166,
            "itemtype": "method",
            "name": "_parseResourceYuiLang",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2220,
            "itemtype": "method",
            "name": "_parseResourceYuiModule",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "parsed resource, or null if shouldn't be used",
                "type": "Object|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2262,
            "description": "preloads a directory containing many mojits",
            "itemtype": "method",
            "name": "_preloadDirMojits",
            "params": [
                {
                    "name": "dir",
                    "description": "directory path",
                    "type": "String"
                },
                {
                    "name": "pkg",
                    "description": "metadata (name and version) about the package",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "work down via other called methods",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2311,
            "description": "preloads a directory that represents a single mojit",
            "itemtype": "method",
            "name": "_preloadDirMojit",
            "params": [
                {
                    "name": "dir",
                    "description": "directory path",
                    "type": "String"
                },
                {
                    "name": "pkg",
                    "description": "metadata (name and version) about the package",
                    "type": "Object"
                },
                {
                    "name": "pkgDir",
                    "description": "directory of the packaging for this mojit",
                    "type": "String"
                }
            ],
            "return": {
                "description": "work down via other called methods",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2429,
            "description": "Finds resources based on our conventions\n-doesn't- load mojits or their contents.  That's done elsewhere.\n\nactions/{name}.**.js\naddons/{subtype}/{name}.**.js\narchetypes/{subtype}/{name}/\nassets/{everything}\nbinders/{name}.**.js\ncommands/{name}.js\ncontroller.**.js\nlang/{name}.**.js\nmiddleware/{name}.js\nmodels/{name}.**.js\nviews/{name}.**.{ext}\nyui_modules/{name}.**.js",
            "itemtype": "method",
            "name": "_findResourcesByConvention",
            "params": [
                {
                    "name": "dir",
                    "description": "directory from which to find resources",
                    "type": "String"
                },
                {
                    "name": "pkg",
                    "description": "metadata (name and version) about the package",
                    "type": "Object"
                },
                {
                    "name": "mojitType",
                    "description": "name of mojit to which the resource belongs",
                    "type": "String|null"
                }
            ],
            "return": {
                "description": "list of resources",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2686,
            "itemtype": "method",
            "name": "_parsePath",
            "params": [
                {
                    "name": "res",
                    "description": "partial resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "metadata: ext, shortFile, affinity, contextKey, and contextParts",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2722,
            "description": "utility that registers the resource for later parts of the algorithm",
            "itemtype": "method",
            "name": "_preloadResource",
            "params": [
                {
                    "name": "res",
                    "description": "metadata about the resource",
                    "type": "Object"
                },
                {
                    "name": "mojitType",
                    "description": "which mojit, if applicatable",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2806,
            "description": "Note: this MUST be called before _parseResourceSpec()\n\nGenerates URL's about each spec in application.json",
            "itemtype": "method",
            "name": "_urlsForAppSpecs",
            "return": {
                "description": "",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2839,
            "description": "prereads the configuration file, if possible\n(configuration files in YCB format cannot be preread)",
            "itemtype": "method",
            "name": "_prereadConfigs",
            "params": [
                {
                    "name": "src",
                    "description": "contextualized resources",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2875,
            "description": "Reads and parses a JSON file",
            "itemtype": "method",
            "name": "_readConfigJSON",
            "params": [
                {
                    "name": "fullpath",
                    "description": "path to JSON file",
                    "type": "String"
                }
            ],
            "return": {
                "description": "contents of JSON file",
                "type": "Mixed"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2899,
            "description": "Create a lookup table for validating YCB dimensions and values. The\ntable looks like this:\n\n<pre>\n{\n  \"dim1\": {\n    \"val1\": null,\n    \"val2\": null,\n    ...\n  },\n  ...\n}\n</pre>",
            "itemtype": "method",
            "name": "_precalcValidYCBDimensions",
            "params": [
                {
                    "name": "dimensions",
                    "description": "Top-level YCB \"dimensions\" object",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "object"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2938,
            "description": "Flatten the keys in a nested structure into a single object. The first\nargument is modified. All values are set to null.",
            "itemtype": "method",
            "name": "_flattenYCBDimensions",
            "params": [
                {
                    "name": "keys",
                    "description": "The accumulator for keys.",
                    "type": "Object"
                },
                {
                    "name": "obj",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2961,
            "description": "Return a context that contains only valid dimensions and values.",
            "itemtype": "method",
            "name": "_getValidYCBContext",
            "params": [
                {
                    "name": "ctx",
                    "description": "runtime context",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "filtered runtime context",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 2987,
            "description": "reads a configuration file that is in YCB format",
            "itemtype": "method",
            "name": "_readConfigYCB",
            "params": [
                {
                    "name": "ctx",
                    "description": "runtime context",
                    "type": "Object"
                },
                {
                    "name": "fullpath",
                    "description": "path to the YCB file",
                    "type": "String"
                },
                {
                    "name": "isAppConfig",
                    "description": "indicates whether the file being read is the application.json",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "the contextualized configuration",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 3045,
            "description": "Reads a configuration file for a mojit",
            "itemtype": "method",
            "name": "_readMojitConfigFile",
            "params": [
                {
                    "name": "path",
                    "description": "path to the file",
                    "type": "String"
                },
                {
                    "name": "ycb",
                    "description": "indicates whether the file should be read using the YCB library",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "the configuration",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 3077,
            "description": "Registers the mojit's package.json as a static resource",
            "itemtype": "method",
            "name": "_mojitPackageAsAsset",
            "params": [
                {
                    "name": "dir",
                    "description": "directory of mojit",
                    "type": "String"
                },
                {
                    "name": "mojitType",
                    "description": "name of mojit",
                    "type": "String"
                },
                {
                    "name": "packageJson",
                    "description": "contents of mojit's package.json",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 3113,
            "description": "Checks to see if the version of Mojito specified in a mojit's\npackage.json matches the current verison of Mojito.",
            "itemtype": "method",
            "name": "_mojitoVersionMatch",
            "params": [
                {
                    "name": "pack",
                    "description": "contents of the mojit's package.json file",
                    "type": "Object"
                },
                {
                    "name": "version",
                    "description": "current version of mojito",
                    "type": "String"
                }
            ],
            "return": {
                "description": "returns true if the mojit can be used",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 3149,
            "description": "Takes the preloaded info and resolves (\"cooks down\") affinity, etc.\n\nThis function is a doozy.  This is where all the magic happens as far\nas which version of each resource is used.  The results are stored in\nthis._fwMeta, _appMeta, _mojitMeta, etc.  The primary key of these is\nthe environment (\"client\" or \"server\").  The secondary key is the\ncontext key -- a string representation of the partial context.\n\nWe do that to have fast lookup during runtime.\n\nThe algorithm chooses first from the most specific source:  mojit-\nspecific has higher precedence than shared. Within each of those,\nthe environment-specific version (\"client\" or \"server\") has higher\nprecedence than the \"common\" affinity.\n\nWe do this for each context key (partial context).  We resolve\ncontext inheritance (for example no-context versus device=iphone)\nat runtime (in getMojitTypeDetails()).\n\n(Half of the above algorithm is implemented here, and half in\n_cookdownMerge() which is a utility for this method.)",
            "itemtype": "method",
            "name": "_cookdown",
            "return": {
                "description": "",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 3326,
            "description": "This is a utility for _cookdown().  See docs on that for details.\n\nThe general idea is that we start with the lowest priority items\nand let higher priority items clobber.",
            "itemtype": "method",
            "name": "_cookdownMerge",
            "params": [
                {
                    "name": "env",
                    "description": "\"client\" or \"server\"",
                    "type": "String"
                },
                {
                    "name": "srcs",
                    "description": "ORDER MATTERS! list of resources to merge",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "TODO",
                "type": "TODO"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 3384,
            "description": "Calculates, at server start time, the YUI module dependencies\nfor mojit controllers and binders",
            "itemtype": "method",
            "name": "_precalcYuiDependencies",
            "return": {
                "description": "",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 3697,
            "description": "Uses YUI Loader to sort a list of YUI modules.",
            "itemtype": "method",
            "name": "_sortYUIModules",
            "params": [
                {
                    "name": "ctx",
                    "description": "runtime context",
                    "type": "Object"
                },
                {
                    "name": "env",
                    "description": "runtime environment (\"client\" or \"server\")",
                    "type": "String"
                },
                {
                    "name": "yuiConfig",
                    "description": "configuration for YUI",
                    "type": "Object"
                },
                {
                    "name": "mojitType",
                    "description": "name of mojit",
                    "type": "String"
                },
                {
                    "name": "modules",
                    "description": "YUI configuration for all modules",
                    "type": "Object"
                },
                {
                    "name": "required",
                    "description": "lookup hash of modules that are required",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "list of load-order sorted module names, and object\n     listing paths used to load those modules",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 3777,
            "description": "Calculates the static handling URL for a resource.",
            "itemtype": "method",
            "name": "_precalcStaticURL",
            "params": [
                {
                    "name": "res",
                    "description": "metadata about the resource",
                    "type": "Object"
                },
                {
                    "name": "mojitType",
                    "description": "mojit type, can be undefined for non-mojit-specific resources",
                    "type": "String"
                }
            ],
            "return": {
                "description": "new metadata added to the \"res\" argument",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 3911,
            "description": "Attempt to gather YUI-module details.",
            "itemtype": "method",
            "name": "_precalcYuiModule",
            "params": [
                {
                    "name": "res",
                    "description": "metadata about the resource",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "new metadata added to the \"res\" argument",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 3960,
            "description": "Reads one the configuration files for a mojit",
            "itemtype": "method",
            "name": "_getMojitConfig",
            "params": [
                {
                    "name": "env",
                    "description": "\"client\" or \"server\"",
                    "type": "String"
                },
                {
                    "name": "ctx",
                    "description": "runtime context",
                    "type": "Object"
                },
                {
                    "name": "mojitType",
                    "description": "name of mojit",
                    "type": "String"
                },
                {
                    "name": "name",
                    "description": "config resource name, either \"definition\" or \"defaults\"",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 3990,
            "description": "Returns whether a runtime context matches a partial context",
            "itemtype": "method",
            "name": "_matchContext",
            "params": [
                {
                    "name": "ctx",
                    "description": "runtime context",
                    "type": "Object"
                },
                {
                    "name": "ctxParts",
                    "description": "partial context",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 4017,
            "description": "Returns a list of resource metadata that match the context",
            "itemtype": "method",
            "name": "_getResourceListForContext",
            "params": [
                {
                    "name": "src",
                    "description": "list of contextualized resources, key is contextKey",
                    "type": "Object"
                },
                {
                    "name": "ctx",
                    "description": "context to match",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "list of resources, key is resource ID",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 4057,
            "description": "Returns a list of the language resources\ndoesn't discriminate based on context:  returns all langs for all\ncontexts.",
            "itemtype": "method",
            "name": "_getLangList",
            "params": [
                {
                    "name": "src",
                    "description": "list of contextualized resources, key is contextKey",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "list of language resources, key is resource ID",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 4089,
            "description": "Returns the metadata for a resource specific for a particular runtime context",
            "itemtype": "method",
            "name": "_getContextualizedResource",
            "params": [
                {
                    "name": "src",
                    "description": "list of contextualized resources, key is contextKey",
                    "type": "Object"
                },
                {
                    "name": "ctx",
                    "description": "context to match",
                    "type": "Object"
                },
                {
                    "name": "resid",
                    "description": "ID of resource to find",
                    "type": "String"
                }
            ],
            "return": {
                "description": "resource metadata",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 4128,
            "description": "Indicates whether file should be skipped based on its path",
            "itemtype": "method",
            "name": "_skipBadPath",
            "params": [
                {
                    "name": "pathParts",
                    "description": "return value of _parsePath() (or the equivalent)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "true indicates that the file should be skipped",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 4145,
            "description": "Generate a report of syntax errors for JavaScript code. This is also\nvery useful to find syntax errors in JSON documents.",
            "itemtype": "method",
            "name": "_reportJavaScriptSyntaxErrors",
            "params": [
                {
                    "name": "js",
                    "description": "the JavaScript",
                    "type": "String"
                },
                {
                    "name": "filename",
                    "description": "OPTIONAL. the name of the file containing the\n    JavaScript",
                    "type": "String"
                }
            ],
            "return": {
                "description": "if errors were found, a multi-line error report",
                "type": "String"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 4233,
            "description": "Returns the selector for the runtime context",
            "itemtype": "method",
            "name": "_selectorFromContext",
            "params": [
                {
                    "name": "ctx",
                    "description": "runtime context",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "selector for context",
                "type": "String|null"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 4249,
            "itemtype": "method",
            "name": "_objectIsEmpty",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "true if the object is empty",
                "type": "Boolean"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 4266,
            "description": "Recursively merge one object onto another",
            "itemtype": "method",
            "name": "_mergeRecursive",
            "params": [
                {
                    "name": "dest",
                    "description": "object to merge into",
                    "type": "Object"
                },
                {
                    "name": "src",
                    "description": "object to merge onto \"dest\"",
                    "type": "Object"
                },
                {
                    "name": "matchType",
                    "description": "controls whether a non-object in the src is\n         allowed to clobber a non-object in the dest (if a different type)",
                    "type": "Boolean"
                }
            ],
            "return": {
                "description": "the modified \"dest\" object is also returned directly",
                "type": "Object"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 4303,
            "itemtype": "method",
            "name": "_cloneObj",
            "params": [
                {
                    "name": "o",
                    "description": "",
                    "type": "Mixed"
                }
            ],
            "return": {
                "description": "deep copy of argument",
                "type": "Mixed"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 4338,
            "description": "A wrapper for fs.readdirSync() that guarantees ordering. The order in\nwhich the file system is walked is significant within the resource\nstore, e.g., when looking up a matching context.",
            "itemtype": "method",
            "name": "_sortedReaddirSync",
            "params": [
                {
                    "name": "path",
                    "description": "directory to read",
                    "type": "String"
                }
            ],
            "return": {
                "description": "files in the directory",
                "type": "Array"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        },
        {
            "file": "mojito_src/source/lib/store.server.js",
            "line": 4354,
            "description": "Recursively walks a directory",
            "itemtype": "method",
            "name": "_walkDirRecursive",
            "params": [
                {
                    "name": "dir",
                    "description": "directory to start at",
                    "type": "String"
                },
                {
                    "name": "cb",
                    "description": "callback called for each file",
                    "type": "Function(error, subdir, name, isFile)"
                },
                {
                    "name": "_subdir",
                    "description": "INTERNAL argument, please ignore",
                    "type": "String"
                }
            ],
            "return": {
                "description": "value returned via callback",
                "type": "Nothing"
            },
            "access": "private",
            "tagname": "",
            "class": "ResourceStore.server",
            "module": "MojitoServer"
        }
    ]
}